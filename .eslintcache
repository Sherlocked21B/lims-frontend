[{"/home/sherlock/Workdev/lims-frontend/src/index.js":"1","/home/sherlock/Workdev/lims-frontend/src/App.js":"2","/home/sherlock/Workdev/lims-frontend/src/reducers/index.js":"3","/home/sherlock/Workdev/lims-frontend/src/Components/AddReagent.js":"4","/home/sherlock/Workdev/lims-frontend/src/Components/AddCutomer.js":"5","/home/sherlock/Workdev/lims-frontend/src/Components/AllSample.js":"6","/home/sherlock/Workdev/lims-frontend/src/Components/ImportReagent.js":"7","/home/sherlock/Workdev/lims-frontend/src/Components/appBar.js":"8","/home/sherlock/Workdev/lims-frontend/src/Components/PendingSample.js":"9","/home/sherlock/Workdev/lims-frontend/src/Components/login.js":"10","/home/sherlock/Workdev/lims-frontend/src/Components/AllReagent.js":"11","/home/sherlock/Workdev/lims-frontend/src/api/index.js":"12","/home/sherlock/Workdev/lims-frontend/src/Components/register.js":"13","/home/sherlock/Workdev/lims-frontend/src/Components/AddTest.js":"14"},{"size":562,"mtime":1613919733576,"results":"15","hashOfConfig":"16"},{"size":1466,"mtime":1615278851414,"results":"17","hashOfConfig":"16"},{"size":130,"mtime":1613919733576,"results":"18","hashOfConfig":"16"},{"size":2709,"mtime":1614104044327,"results":"19","hashOfConfig":"16"},{"size":5440,"mtime":1614532435077,"results":"20","hashOfConfig":"16"},{"size":6566,"mtime":1614531692248,"results":"21","hashOfConfig":"16"},{"size":3108,"mtime":1615278851414,"results":"22","hashOfConfig":"16"},{"size":4971,"mtime":1615278851414,"results":"23","hashOfConfig":"16"},{"size":4990,"mtime":1614271858541,"results":"24","hashOfConfig":"16"},{"size":4729,"mtime":1613929964641,"results":"25","hashOfConfig":"16"},{"size":1388,"mtime":1614453258668,"results":"26","hashOfConfig":"16"},{"size":241,"mtime":1613919733576,"results":"27","hashOfConfig":"16"},{"size":5871,"mtime":1614435146631,"results":"28","hashOfConfig":"16"},{"size":3101,"mtime":1614533977658,"results":"29","hashOfConfig":"16"},{"filePath":"30","messages":"31","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"32"},"uw0g8g",{"filePath":"33","messages":"34","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"35","messages":"36","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"32"},{"filePath":"37","messages":"38","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"39","usedDeprecatedRules":"32"},{"filePath":"40","messages":"41","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"42","usedDeprecatedRules":"32"},{"filePath":"43","messages":"44","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"45","usedDeprecatedRules":"32"},{"filePath":"46","messages":"47","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"48","usedDeprecatedRules":"32"},{"filePath":"49","messages":"50","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"32"},{"filePath":"51","messages":"52","errorCount":0,"warningCount":6,"fixableErrorCount":0,"fixableWarningCount":0,"source":"53","usedDeprecatedRules":"32"},{"filePath":"54","messages":"55","errorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":"56","usedDeprecatedRules":"32"},{"filePath":"57","messages":"58","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"59","usedDeprecatedRules":"32"},{"filePath":"60","messages":"61","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"32"},{"filePath":"62","messages":"63","errorCount":0,"warningCount":6,"fixableErrorCount":0,"fixableWarningCount":0,"source":"64","usedDeprecatedRules":"32"},{"filePath":"65","messages":"66","errorCount":0,"warningCount":10,"fixableErrorCount":0,"fixableWarningCount":0,"source":"67","usedDeprecatedRules":"32"},"/home/sherlock/Workdev/lims-frontend/src/index.js",[],["68","69"],"/home/sherlock/Workdev/lims-frontend/src/App.js",[],"/home/sherlock/Workdev/lims-frontend/src/reducers/index.js",[],"/home/sherlock/Workdev/lims-frontend/src/Components/AddReagent.js",["70","71","72","73"],"import React, { useState} from \"react\";\nimport {\n  TextField,\n  Button,\n  CssBaseline,\n  TableContainer,\n  Table,\n  TableHead,\n  TableRow,\n  TableCell,\n  TableBody\n} from \"@material-ui/core\";\n\nconst AddReagent=()=>{\n    const [reagent , setReagent] = React.useState({\n        reagentName:\"\",\n        unit:\"\",\n        voulme:\"\"\n    })\n    return(\n     <CssBaseline>\n      <div style={Styles.inputfiled}>\n        <TextField\n          style={Styles.inputfileds}\n          id=\"reagentName\"\n          label=\"Name Of Reagent\"\n          type=\"string\"\n          variant=\"outlined\"\n          style={Styles.inputfileds}\n        //   value={reagent.reagentName}\n        />\n        <TextField\n          style={Styles.inputfileds}\n          label=\"Unit Of Reagent\"\n          variant=\"outlined\"\n        //   value={reagent.unit}\n        />\n        <TextField\n          style={Styles.inputfileds}\n          label=\"Volume\"\n          variant=\"outlined\"\n          type=\"number\"\n        //   value={reagent.voulme}\n        />\n\n        <Button\n          variant=\"contained\"\n          color=\"primary\"\n          onClick={()=>{}}\n          style={Styles.button}\n        >\n          Add\n        </Button>\n        </div>\n        <div style={Styles.table}>\n        <TableContainer style={Styles.tables}>\n        <Table stickyHeader aria-label=\"sticky table\">\n        <TableHead>\n          <TableRow>\n            <TableCell>Reagent Name</TableCell>\n            <TableCell>Unit</TableCell>\n          </TableRow>\n        </TableHead>\n        <TableBody>\n            <TableRow>\n                <TableCell>Hcl</TableCell>\n                <TableCell>ml</TableCell>\n\n        <Button\n          variant=\"contained\"\n          color=\"secondary\"\n          onClick={()=>{}}\n          style={Styles.button}\n        >\n            Delete\n            </Button>\n            </TableRow>\n            <TableRow>\n                <TableCell>Hcl</TableCell>\n                <TableCell>ml</TableCell>\n\n        <Button\n          variant=\"contained\"\n          color=\"secondary\"\n          onClick={()=>{}}\n          style={Styles.button}\n        >\n            Delete\n            </Button>\n            </TableRow>\n        </TableBody>\n        </Table>\n        </TableContainer>\n        </div>\n    </CssBaseline>\n    )\n}\n\nconst Styles = {\n    inputfiled: {\n      marginTop: \"6%\",\n      marginLeft: \"5%\",\n      marginBottom: \"2%\",\n      display: \"flex\",\n    },\n    inputfileds: {\n      marginTop: \"3%\",\n      marginLeft: \"3%\",\n      marginBottom: \"2%\",\n    },\n    button: {\n      marginTop: \"3%\",\n      marginLeft: \"5%\",\n      height: 50,\n    },\n    tables: {\n      height: \"380px\",\n    },\n    table: {\n      marginLeft: \"3%\",\n    },\n  };\n\nexport default AddReagent;","/home/sherlock/Workdev/lims-frontend/src/Components/AddCutomer.js",["74","75","76","77"],"import React from 'react';\nimport \"./myStyle.css\";\nimport {\n    makeStyles,\n    Select,\n    InputLabel,\n    Button,\n    FormControl,\n    TextField,\n    MenuItem,\n    theme,\n    CircularProgress,\n    Paper,\n} from \"@material-ui/core\";\n\nconst useStyles = makeStyles(theme => ({\n    root: {\n        display: \"flex\",\n        \n    },\n    position: {\n        marginLeft: theme.spacing(8),\n        flex : \"1 auto\",\n    },\n    buttons: {\n        marginTop: theme.spacing(6),\n        marginLeft: theme.spacing(120)\n    },\n    button:{\n        margin:\"5px 10px 5px 5px\"\n    }\n}));\n\nconst AddCutomer = () => {\n    const classes = useStyles();\n    const [addCustomer,setAddCustomer]=React.useState({\n        customerName:\"\",\n        age:\"\",\n        gender:\"\",\n        contactNumber:\"\",\n        test:\"\",\n        dueDate:\"\",\n        sampleId:\"\",\n        collectedBy:\"\",\n        payment:\"\"\n    });\n\n    return (\n        <div>\n           <React.Fragment>\n           <Paper\n                style={{\n                    padding: \"1em 2em 2em 2em\",\n                    margin: \"8em 2em 2em 2em\"\n                }}\n                elevation={3}\n            >\n            <h1 align=\"center\">Customer Registration Page</h1>\n           <h4>Customer Details</h4>\n            <div className={classes.root}>\n                <TextField\n                    label=\"Customer Name\"\n                    variant=\"outlined\"\n                    // value={addCustomer.customerName}\n                    style={{ width: 80 }}\n                    className={classes.position}\n                    type = \"string\"\n                />\n                  <TextField\n                    label=\"Age\"\n                    variant=\"outlined\"\n                    // value={addCustomer.age}\n                    style={{ width: 80 }}\n                    className={classes.position}\n                    type=\"number\"\n                />\n                  <FormControl className={classes.formControl}>\n                  <InputLabel htmlFor=\"age-native-simple\">Gender</InputLabel>\n                        <Select\n                        labelId=\"demo-controlled-open-select-label\"\n                        id=\"demo-controlled-open-select\"\n                        // value={addCustomer.gender}\n                        label=\"Gender\"\n                        className={classes.position}\n                        style={{ width: 120}}\n                        >\n                        <MenuItem value=\"male\">Male</MenuItem>\n                        <MenuItem value=\"female\">Female</MenuItem>\n                        <MenuItem value=\"others\">Others</MenuItem>\n                        </Select>\n                    </FormControl>\n                <TextField\n                    label=\"Contact Number\"\n                    variant=\"outlined\"\n                    // value={addCustomer.contactNumber}\n                    style={{ width: 80 }}\n                    className={classes.position}\n                    type=\"number\"\n                />\n                \n            </div>\n            <h4>Laboratory Details</h4>\n            <div className={classes.root}>\n                <TextField\n                    label=\"Test Name\"\n                    variant=\"outlined\"\n                    // value={addCustomer.test}\n                    style={{ width: 80 }}\n                    className={classes.position}\n                    type = \"string\"\n                />\n              <TextField\n                    id=\"date\"\n                    label=\"Due_Date\"\n                    type=\"date\"\n                    // value={addCustomer.dueDate}\n                    className={classes.position}\n                    InputLabelProps={{\n                    shrink: true,\n                    }}\n                />\n                <TextField\n                    label=\"Sample Id\"\n                    variant=\"outlined\"\n                    // value={addCustomer.sampleid}\n                    style={{ width: 80 }}\n                    className={classes.position}\n                    type=\"string\"\n                />\n                 <TextField\n                    label=\"Collected By\"\n                    variant=\"outlined\"\n                    // value={addCustomer.collectedBy}\n                    style={{ width: 80 }}\n                    className={classes.position}\n                    type=\"string\"\n                />\n                <TextField\n                    label=\"Payment\"\n                    variant=\"outlined\"\n                    // value={addCustomer.payment}\n                    style={{ width: 80 }}\n                    className={classes.position}\n                    type=\"number\"\n                />\n                \n            </div>\n            <div>\n            <div className={classes.buttons}>\n                <Button\n                    variant=\"contained\"\n                    style={{ width: \"200px\",paddingLeft:\"20px\" }}\n                    color=\"primary\"\n                    className={classes.button}\n                >\n                  Add\n                </Button>\n                <Button\n                    variant=\"contained\"\n                    style={{ width: \"200px\" ,paddingRight:\"20px\"}}\n                    color=\"secondary\"\n                    className={classes.button}\n                >\n                    Reset\n                </Button>\n            </div>\n            </div>\n            </Paper>\n            </React.Fragment>\n        </div>\n    )\n}\n\nexport default AddCutomer;","/home/sherlock/Workdev/lims-frontend/src/Components/AllSample.js",["78","79","80"],"import React, { useState} from \"react\";\nimport {\n    TextField,\n    makeStyles,\n    Button,\n   TableContainer,\n   Table,\n   TableHead,\n   TableRow,\n   TableCell,\n   TableBody\n} from \"@material-ui/core\";\nimport SearchIcon from '@material-ui/icons/Search';\n\nconst styles = makeStyles({\n    paper: {\n        marginTop: \"7%\",\n        marginLeft: \"5%\",\n        marginBottom: \"2%\",\n        display: \"flex\",\n        justifyContent:\"space-between\"\n    },\n    items:{\n     flex:\"1 1 1 1 auto\",\n     width:\"20em\",\n    },\n    button: {\n        margin: \"13px 12px 12px 10px\",\n        backgroundColor:\"#27E208\"\n    },\n    tables: {\n        height: \"380px\",\n      },\n      table: {\n        marginTop:\"5%\",\n        marginLeft: \"3%\",\n      },\n});\n\nconst AllSample = () => {\n    const classes = styles();\n    const [sampleFields,setSampleFields] = React.useState({\n        customerName:\"\",\n        date:\"\",\n        sampleId:\"\"\n    })\n    return (\n        <React.Fragment>\n                <div className={classes.paper}>\n                    <TextField\n                            name=\"CustomerName\"\n                            label=\"Customer Name\"\n                            // value={sampleFields.customerName}\n                            variant=\"filled\" \n                            className={classes.items}\n                        />\n                        <TextField\n                            // type=\"password\"\n                            name=\"Date\"\n                            // value={sampleFields.date}\n                            variant=\"filled\"\n                            type=\"date\"\n                            className={classes.items}\n                        />\n                           <TextField\n                            name=\"SampleId\"\n                            label=\"Sample Id\"\n                            // value={sampleFields.sampleId}\n                            variant=\"filled\" \n                            className={classes.items}\n                        />\n                        <Button\n                            variant=\"contained\"\n                            color=\"primary\"\n                            className={classes.items}\n                        >\n                            <SearchIcon/>\n                            Search\n                        </Button>\n                    </div>\n                    <div className={classes.table}>\n                    <TableContainer className={classes.tables}>\n        <Table stickyHeader aria-label=\"sticky table\">\n        <TableHead>\n          <TableRow>\n            <TableCell>Sample Id</TableCell>\n            <TableCell>Test</TableCell>\n            <TableCell>Customer Name</TableCell>\n            <TableCell>Due Date</TableCell>\n            <TableCell>Payment</TableCell>\n            <TableCell>Collected By</TableCell>\n            <TableCell>Status</TableCell>\n          </TableRow>\n        </TableHead>\n        <TableBody>\n            <TableRow>\n                <TableCell>101</TableCell>\n                <TableCell>Urine Test</TableCell>\n                <TableCell>Rajesh</TableCell>\n                <TableCell>2020/01/20</TableCell>\n                <TableCell>1500</TableCell>\n                <TableCell>Ravish</TableCell>\n                <TableCell >Pending</TableCell>\n                <TableCell>\n                <Button\n                          className={classes.button}\n                            variant=\"contained\"\n                            color=\"black-text\"\n                        >\n                           Generate Report\n                        </Button>\n                </TableCell>\n            </TableRow>\n            <TableRow>\n                <TableCell>101</TableCell>\n                <TableCell>Urine Test</TableCell>\n                <TableCell>Rajesh</TableCell>\n                <TableCell>2020/01/20</TableCell>\n                <TableCell>1500</TableCell>\n                <TableCell>Ravish</TableCell>\n                <TableCell >Done</TableCell>\n                <TableCell>\n                <Button\n                        className={classes.button}\n                            variant=\"contained\"\n                            color=\"black-text\"\n                        >\n                           Show Info\n                        </Button>\n                </TableCell>\n            </TableRow>\n            <TableRow>\n                <TableCell>101</TableCell>\n                <TableCell>Urine Test</TableCell>\n                <TableCell>Rajesh</TableCell>\n                <TableCell>2020/01/20</TableCell>\n                <TableCell>1500</TableCell>\n                <TableCell>Ravish</TableCell>\n                <TableCell >Pending</TableCell>\n                <TableCell>\n                <Button\n                        className={classes.button}\n                            variant=\"contained\"\n                            color=\"black-text\"\n                        >\n                           Generate Report\n                        </Button>\n                </TableCell>\n            </TableRow>\n            <TableRow>\n                <TableCell>101</TableCell>\n                <TableCell>Urine Test</TableCell>\n                <TableCell>Rajesh</TableCell>\n                <TableCell>2020/01/20</TableCell>\n                <TableCell>1500</TableCell>\n                <TableCell>Ravish</TableCell>\n                <TableCell >Pending</TableCell>\n                <TableCell>\n                <Button\n                        className={classes.button}\n                            variant=\"contained\"\n                            color=\"black-text\"\n                        >\n                           Generate Report\n                        </Button>\n                </TableCell>\n            </TableRow>\n            <TableRow>\n                <TableCell>101</TableCell>\n                <TableCell>Urine Test</TableCell>\n                <TableCell>Rajesh</TableCell>\n                <TableCell>2020/01/20</TableCell>\n                <TableCell>1500</TableCell>\n                <TableCell>Ravish</TableCell>\n                <TableCell >Pending</TableCell>\n                <TableCell>\n                <Button\n                        className={classes.button}\n                            variant=\"contained\"\n                            color=\"black-text\"\n                        >\n                           Generate Report\n                        </Button>\n                </TableCell>\n            </TableRow>\n        </TableBody>\n        </Table>\n        </TableContainer>\n        </div>\n        </React.Fragment>\n    )\n}\n\nexport default AllSample;\n","/home/sherlock/Workdev/lims-frontend/src/Components/ImportReagent.js",["81","82","83"],"import React, { useState } from \"react\";\nimport \"./myStyle.css\";\nimport {\n    TextField,\n    Paper,\n    makeStyles,\n    Button,\n   Select,\n   MenuItem,\n   InputLabel,\n   FormControl\n} from \"@material-ui/core\";\nconst styles = makeStyles({\n    paper: {\n        display: \"flex\",\n        justifyContent: \"center\",\n        alignItems: \"center\",\n        flexDirection: \"column\",\n        height: \"100%\",\n        width: \"100%\",\n        margin: \"30\",\n        padding: \"5\",\n        backgroundColor: \"#f7f7f7\",\n\n    },\n    input: {\n        display: \"flex\",\n        flexDirection: \"column\",\n        justifyContent:\"space-around\"\n    },\n    items:{\n     height:\"80%\"\n    },\n    button: {\n        marginTop: \"2rem\",\n    }\n});\n\n\nconst ImportReagent = () => {\n    const classes = styles();\n    const [reagent,setReagent]= React.useState(\"\");\n    const [unit, setUnit] = React.useState(\"\");\n    const [vloume, setVoulme]= React.useState(\"\");\n\n    // const handleChange = (event) => {\n    //     setRole(event.target.value);\n    //   };\n    return (\n        <div>\n                   <React.Fragment>\n        <Paper style={{ height: \"100vh\" }}>\n                <div className={classes.paper}>\n                    <div className={classes.input}>\n                        <FormControl className={classes.formControl}>\n                         <InputLabel id=\"demo-customized-select-label\">Name Of Reagent</InputLabel>\n                         <Select\n                        labelId=\"demo-customized-select-label\"\n                        id=\"demo-customized-select\"\n                        // value={reagent}\n                        // onChange={handleChange}\n                        >\n                        <MenuItem value=\"hcl\">Hcl</MenuItem>\n                        <MenuItem value=\"H2so4\">H2SO4</MenuItem>\n                        </Select>\n                    </FormControl>\n                    <FormControl className={classes.formControl}>\n                         <InputLabel id=\"demo-customized-select-label\">Unit Of Reagent</InputLabel>\n                         <Select\n                        labelId=\"demo-customized-select-label\"\n                        id=\"demo-customized-select\"\n                        // value={unit}\n                        // onChange={handleChange}\n                        >\n                        <MenuItem value=\"ml\">ml</MenuItem>\n                        <MenuItem value=\"l\">l</MenuItem>\n                        </Select>\n                    </FormControl>\n                    <TextField\n                            name=\"voume\"\n                            label=\"Volume\"\n                            // value={voulme}\n                            variant=\"filled\"     \n                        />\n\n                        <Button\n                            className={classes.button}\n                            variant=\"contained\"\n                            color=\"primary\"\n                        >\n                            Add \n                        </Button>\n                    </div>\n                </div>\n            </Paper>\n        </React.Fragment>\n        </div>\n    )\n}\nexport default ImportReagent;","/home/sherlock/Workdev/lims-frontend/src/Components/appBar.js",[],"/home/sherlock/Workdev/lims-frontend/src/Components/PendingSample.js",["84","85","86","87","88","89"],"import React, { useState} from \"react\";\nimport {\n  TableContainer,\n  Table,\n  TableHead,\n  TableRow,\n  TableCell,\n  TableBody,\n  Button\n} from \"@material-ui/core\";\nimport { Style } from \"@material-ui/icons\";\n\n\nconst PendingSample = () => {\n    \n    return (\n        <div>\n             <div style={Styles.table}>\n        <TableContainer style={Styles.tables}>\n        <Table stickyHeader aria-label=\"sticky table\">\n        <TableHead>\n          <TableRow>\n            <TableCell>Sample Id</TableCell>\n            <TableCell>Test</TableCell>\n            <TableCell>Customer Name</TableCell>\n            <TableCell>Due Date</TableCell>\n            <TableCell>Payment</TableCell>\n            <TableCell>Collected By</TableCell>\n            <TableCell>Status</TableCell>\n          </TableRow>\n        </TableHead>\n        <TableBody>\n            <TableRow>\n                <TableCell>101</TableCell>\n                <TableCell>Urine Test</TableCell>\n                <TableCell>Rajesh</TableCell>\n                <TableCell>2020/01/20</TableCell>\n                <TableCell>1500</TableCell>\n                <TableCell>Ravish</TableCell>\n                <TableCell style={Style.text}>Pending</TableCell>\n                <TableCell>\n                <Button\n                         style={Styles.button}\n                            variant=\"contained\"\n                            color=\"primary\"\n                            color=\"black-text\"\n                        >\n                           Generate Report\n                        </Button>\n                </TableCell>\n            </TableRow>\n            <TableRow>\n                <TableCell>101</TableCell>\n                <TableCell>Urine Test</TableCell>\n                <TableCell>Rajesh</TableCell>\n                <TableCell>2020/01/20</TableCell>\n                <TableCell>1500</TableCell>\n                <TableCell>Ravish</TableCell>\n                <TableCell style={Style.text}>Pending</TableCell>\n                <TableCell>\n                <Button\n                         style={Styles.button}\n                            variant=\"contained\"\n                            color=\"primary\"\n                            color=\"black-text\"\n                        >\n                           Generate Report\n                        </Button>\n                </TableCell>\n            </TableRow>\n            <TableRow>\n                <TableCell>101</TableCell>\n                <TableCell>Urine Test</TableCell>\n                <TableCell>Rajesh</TableCell>\n                <TableCell>2020/01/20</TableCell>\n                <TableCell>1500</TableCell>\n                <TableCell>Ravish</TableCell>\n                <TableCell color=\"secondary\">Pending</TableCell>\n                <TableCell>\n                <Button\n                         style={Styles.button}\n                            variant=\"contained\"\n                            color=\"primary\"\n                            color=\"black-text\"\n                        >\n                           Generate Report\n                        </Button>\n                </TableCell>\n            </TableRow>\n            <TableRow>\n                <TableCell>101</TableCell>\n                <TableCell>Urine Test</TableCell>\n                <TableCell>Rajesh</TableCell>\n                <TableCell>2020/01/20</TableCell>\n                <TableCell>1500</TableCell>\n                <TableCell>Ravish</TableCell>\n                <TableCell color=\"secondary\">Pending</TableCell>\n                <TableCell>\n                <Button\n                         style={Styles.button}\n                            variant=\"contained\"\n                            color=\"primary\"\n                            color=\"black-text\"\n                        >\n                           Generate Report\n                        </Button>\n                </TableCell>\n            </TableRow>\n            <TableRow>\n                <TableCell>101</TableCell>\n                <TableCell>Urine Test</TableCell>\n                <TableCell>Rajesh</TableCell>\n                <TableCell>2020/01/20</TableCell>\n                <TableCell>1500</TableCell>\n                <TableCell>Ravish</TableCell>\n                <TableCell>Pending</TableCell>\n                <TableCell>\n                <Button\n                         style={Styles.button}\n                            variant=\"contained\"\n                            color=\"primary\"\n                            color=\"black-text\"\n                        >\n                           Generate Report\n                        </Button>\n                </TableCell>\n            </TableRow>\n        </TableBody>\n        </Table>\n        </TableContainer>\n        </div>\n        </div>\n    )\n}\n\nconst Styles = {\n    tables: {\n        height: \"380px\",\n      },\n      table: {\n        marginTop:\"7%\",\n        marginLeft: \"3%\",\n      },\n      button: {\n        marginTop: \"1rem\",\n        backgroundColor:\"#27E208\",\n        \n    },\n  \n}\n\n\nexport default PendingSample;","/home/sherlock/Workdev/lims-frontend/src/Components/login.js",["90","91","92","93","94"],"import React, { useState } from \"react\";\nimport CircularProgress from \"@material-ui/core/CircularProgress\";\nimport {\n    TextField,\n    Paper,\n    makeStyles,\n    Typography,\n    Button,\n    StepButton\n} from \"@material-ui/core\";\nimport axios,{setToken} from '../api'\n// import ErrorSnackBar from \"../Components/SnackBar\";\n// import axios from \"axios\";\nimport { Redirect } from \"react-router-dom\";\n// import { api } from \"../api\";\nconst styles = makeStyles({\n    paper: {\n        display: \"flex\",\n        justifyContent: \"center\",\n        alignItems: \"center\",\n        flexDirection: \"column\",\n        height: \"100%\",\n        width: \"100%\",\n        margin: \"0\",\n        padding: \"0\",\n        backgroundColor: \"#f7f7f7\"\n    },\n    input: {\n        display: \"flex\",\n        flexDirection: \"column\"\n    },\n    button: {\n        marginTop: \"2rem\"\n    }\n});\n\nconst Login = ({isLogin,setLogin}) => {\n    // const [btnLoader, setLoader] = useState(false);\n\n    const classes = styles();\n    const [username, setUsername] = useState(\"\");\n    const [password , setPassword] = useState(\"\");\n\n    // //SnackBar operations\n    // const [messege, setMessege] = React.useState(\"\");\n    // const [openSnack, setOpen] = React.useState(false);\n    // const handleOpen = () => {\n    //     setOpen(true);\n    // };\n\n    // const handleClose = (reason) => {\n    //     if (reason === \"clickaway\") {\n    //         return;\n    //     }\n    //     setOpen(false);\n    // };\n\n    // const handleChange = event => {\n    //     setUsername(event.target.value)\n    // };\n    // const misMatch = () => {\n    //     handleOpen();\n    //     setCheck(\"\");\n    //     setLoader(false);\n    // };\n    const handleSubmit = () => {\n        // setLoader(true);\n        // axios\n        //     .get(`${api}/login/`)\n        //     .then(res => {\n        //         if (check === res.data[0].password) {\n                    localStorage.setItem(\"token\", \"anyrandomstring\");\n                    setLogin(true);\n        //         } else misMatch();\n        //     })\n        //     .catch(() => {\n        //         setMessege(\"Server Error!\");\n        //         handleOpen();\n        //         setLoader(false);\n        //     });\n\n    };\n    // if (props.isLogin) {\n    //     return <Redirect to=\"/\" />;\n    // }\n    // const handleSubmit=async (e)=>{\n    //     e.preventDefault()\n    //     try{\n    //         const {data} = await axios.post('/login',{userName:username,password})\n    //         setToken(data.token)\n    //         setLogin(true)\n    //         localStorage.setItem(\"token\",data.token)\n            \n            \n\n    //     }catch(e){\n    //         console.log(e)\n    //     }\n    //     if(isLogin){\n    //         return <Redirect to=\"/\" />;\n    //     }\n    // }\n\n    return (\n        <React.Fragment>\n            <Paper style={{ height: \"100vh\" }}>\n                <div className={classes.paper}>\n                    <Typography\n                        variant=\"h4\"\n                        style={{ fontWeight: \"bold\", marginBottom: \"20px\" }}\n                    >\n                        Laboratory Management System\n                    </Typography>\n                    <div className={classes.input}>\n                    <TextField\n                            name=\"Username\"\n                            label=\"Username\"\n                            value={username}\n                            variant=\"filled\"\n                            onChange={(e)=>setUsername(e.target.value)}\n                        />\n                        <TextField\n                            type=\"password\"\n                            name=\"password\"\n                            label=\"Password\"\n                            value={password}\n                            variant=\"filled\"\n                            onChange={(e)=>setPassword(e.target.value)}\n                        />\n                        <Button\n                            className={classes.button}\n                            variant=\"contained\"\n                            color=\"primary\"\n                            onClick={handleSubmit}\n                        >\n                            LOGIN\n                            {/* {btnLoader ? (\n                                <CircularProgress color=\"secondary\" />\n                            ) : (\n                                \"LOGIN\"\n                            )} */}\n                        </Button>\n                    </div>\n                </div>\n            </Paper>\n            {/* <ErrorSnackBar\n                open={openSnack}\n                handleClose={handleClose}\n                messege={messege || \"Password Incorrect!!\"}\n            /> */}\n        </React.Fragment>\n    );\n};\n\nexport default Login;","/home/sherlock/Workdev/lims-frontend/src/Components/AllReagent.js",["95"],"import React, { useState} from \"react\";\nimport {\n  TableContainer,\n  Table,\n  TableHead,\n  TableRow,\n  TableCell,\n  TableBody,\n  Paper\n} from \"@material-ui/core\";\n\nconst AllReagent = () => {\n    return (\n        <div>\n          <Paper style={Styles.Paper} elevation=\"2\">\n             <div style={Styles.table}>\n        <TableContainer style={Styles.tables}>\n        <Table stickyHeader aria-label=\"sticky table\">\n        <TableHead>\n          <TableRow>\n            <TableCell>Reagent Name</TableCell>\n            <TableCell>Unit</TableCell>\n            <TableCell>Volume</TableCell>\n          </TableRow>\n        </TableHead>\n        <TableBody>\n            <TableRow>\n                <TableCell>Hcl</TableCell>\n                <TableCell>ml</TableCell>\n                <TableCell>1000</TableCell>\n            </TableRow>\n            <TableRow>\n                <TableCell>Hcl</TableCell>\n                <TableCell>ml</TableCell>\n                <TableCell>2000</TableCell>\n            </TableRow>\n        </TableBody>\n        </Table>\n        </TableContainer>\n        </div>\n        </Paper>\n        </div>\n    )\n}\n\nconst Styles = {\n    tables: {\n        height: \"380px\",\n      },\n      table: {\n        marginTop:\"7%\",\n        // marginLeft: \"3%\",\n      },\n      Paper:{\n        marginTop:\"7%\",\n        marginLeft: \"3%\",\n        marginRight: \"3%\"\n      }\n}\n\nexport default AllReagent;","/home/sherlock/Workdev/lims-frontend/src/api/index.js",[],"/home/sherlock/Workdev/lims-frontend/src/Components/register.js",["96","97","98","99","100","101"],"import React, { useState } from \"react\";\nimport {\n    TextField,\n    Paper,\n    makeStyles,\n    Button,\n   Select,\n   MenuItem,\n   InputLabel,\n   FormControl,\n   TableContainer,\n   Table,\n   TableHead,\n   TableRow,\n   TableCell,\n   TableBody\n} from \"@material-ui/core\";\nconst styles = makeStyles({\n    paper: {\n        marginTop: \"10%\",\n        marginLeft: \"5%\",\n        marginBottom: \"2%\",\n        display: \"flex\",\n        justifyContent:\"space-between\"\n    },\n    items:{\n     flex:\"1 1 1 1 auto\",\n     width:\"20em\"\n    },\n    button: {\n        margin: \"13px 12px 12px 10px\",\n    },\n    tables: {\n        height: \"380px\",\n      },\n      table: {\n        marginTop:\"7%\",\n        marginLeft: \"3%\",\n      },\n});\n\n\nconst Register = () => {\n    const classes = styles();\n    const [username, setUsername] = useState(\"\");\n    const [password , setPassword] = useState(\"\");\n    const [role , setRole] = useState(\"\");\n    const [open, setOpen] = React.useState(false);\n\n  const handleChange = (event) => {\n    setRole(event.target.value);\n  };\n\n  const handleClose = () => {\n    setOpen(false);\n  };\n\n  const handleOpen = () => {\n    setOpen(true);\n  };\n    return (\n        <React.Fragment>\n                <div className={classes.paper}>\n                    <TextField\n                            name=\"Username\"\n                            label=\"Username\"\n                            // value={username}\n                            variant=\"filled\" \n                            className={classes.items}\n                        />\n                        <TextField\n                            // type=\"password\"\n                            name=\"password\"\n                            label=\"Password\"\n                            // value={password}\n                            variant=\"filled\"\n                            className={classes.items}\n                        />\n                         <FormControl className={classes.formControl}>\n                        <InputLabel id=\"demo-controlled-open-select-label\">Roles</InputLabel>\n                        <Select\n                        labelId=\"demo-controlled-open-select-label\"\n                        id=\"demo-controlled-open-select\"\n                        open={open}\n                        onClose={handleClose}\n                        onOpen={handleOpen}\n                        value={role}\n                        onChange={handleChange}\n                        className={classes.items}\n                        >\n                        <MenuItem value=\"staff\">Staff</MenuItem>\n                        <MenuItem value=\"inventory_manager\">Inventory Manager</MenuItem>\n                        <MenuItem value=\"accountant\">Accountant</MenuItem>\n                        </Select>\n                    </FormControl>\n\n                        <Button\n                            className={classes.button}\n                            variant=\"contained\"\n                            color=\"primary\"\n                            className={classes.items}\n                        >\n                            Register\n                        </Button>\n                    </div>\n                    <div className={classes.table}>\n        <TableContainer className={classes.tables}>\n        <Table stickyHeader aria-label=\"sticky table\">\n        <TableHead>\n          <TableRow>\n            <TableCell>UserName</TableCell>\n            <TableCell>Password</TableCell>\n            <TableCell>Roles</TableCell>\n          </TableRow>\n        </TableHead>\n        <TableBody>\n            <TableRow>\n                <TableCell>Ramesh</TableCell>\n                <TableCell>1234</TableCell>\n                <TableCell>Inventory Manager</TableCell>\n                <Button\n                            className={classes.button}\n                            variant=\"contained\"\n                            color=\"primary\"\n                        >\n                            Edit\n                        </Button>\n                        <Button\n                            className={classes.button}\n                            variant=\"contained\"\n                            color=\"secondary\"\n                        >\n                            Delete\n                        </Button>\n            </TableRow>\n            <TableRow>\n                <TableCell>Ramesh</TableCell>\n                <TableCell>1234</TableCell>\n                <TableCell>Inventory Manager</TableCell>\n                <Button\n                            className={classes.button}\n                            variant=\"contained\"\n                            color=\"primary\"\n                        >\n                            Edit\n                        </Button>\n                        <Button\n                            className={classes.button}\n                            variant=\"contained\"\n                            color=\"secondary\"\n                        >\n                            Delete\n                        </Button>\n            </TableRow>\n            <TableRow>\n                <TableCell>Ramesh</TableCell>\n                <TableCell>1234</TableCell>\n                <TableCell>Inventory Manager</TableCell>\n                <Button\n                            className={classes.button}\n                            variant=\"contained\"\n                            color=\"primary\"\n                        >\n                            Edit\n                        </Button>\n                        <Button\n                            className={classes.button}\n                            variant=\"contained\"\n                            color=\"secondary\"\n                        >\n                            Delete\n                        </Button>\n            </TableRow>\n        </TableBody>\n        </Table>\n        </TableContainer>\n        </div>\n        </React.Fragment>\n    )\n}\n\nexport default Register;","/home/sherlock/Workdev/lims-frontend/src/Components/AddTest.js",["102","103","104","105","106","107","108","109","110","111"],"import React from 'react';\nimport \"./myStyle.css\";\nimport {\n    makeStyles,\n    Select,\n    InputLabel,\n    Button,\n    FormControl,\n    TextField,\n    MenuItem,\n    theme,\n    CircularProgress,\n} from \"@material-ui/core\";\n\nconst useStyles = makeStyles(theme => ({\n    body:{\n        padding: \"1em 2em 2em 2em\",\n        margin: \"4em 2em 2em 2em\"\n    },\n    root: {\n        display: \"flex\",\n    },\n    position: {\n        marginLeft: theme.spacing(8),\n        flex : \"1 auto\",\n    },\n    buttons: {\n        marginTop: theme.spacing(6),\n        marginLeft: theme.spacing(120)\n    },\n    button:{\n        marginLeft: theme.spacing(6),\n        width: \"200px\",\n        paddingLeft:\"20px\",\n        height: \"3.3em\"\n    }\n}));\n\nconst AddTest = () => {\n    const classes = useStyles();\n    const [addTest,setAddTest]=React.useState({\n        testName:\"\",\n        testAmount:\"\",\n    });\n    const [parameters,setParameters] =React.useState({\n        parameter:[],\n        unit:[],\n        refrenceRange:[]\n    })\n    return (\n        <div className={classes.body}>\n            <React.Fragment> \n                <h4>Test Details</h4>\n            <div className={classes.root}>\n                <TextField\n                    label=\"Test Name\"\n                    variant=\"outlined\"\n                    // value={addTest.testName}\n                    style={{ width: 80 }}\n                    className={classes.position}\n                    type = \"string\"\n                />\n                  <TextField\n                    label=\"Test Amount\"\n                    variant=\"outlined\"\n                    // value={addTest.testAmount}\n                    style={{ width: 80 }}\n                    className={classes.position}\n                    type=\"number\"\n                /> \n                </div>\n                <h4>Bio-Chemical Parameters</h4>\n            <div className={classes.root}>\n                <TextField\n                    label=\"Parameter\"\n                    variant=\"outlined\"\n                    // value={parameters.parameter}\n                    style={{ width: 80 }}\n                    className={classes.position}\n                    type = \"string\"\n                />\n                  <TextField\n                    label=\"unit\"\n                    variant=\"outlined\"\n                    // value={parameters.unit}\n                    style={{ width: 80 }}\n                    className={classes.position}\n                    type=\"string\"\n                /> \n                  <TextField\n                    label=\"Refrence Range\"\n                    variant=\"outlined\"\n                    // value={parameters.refrenceRange}\n                    style={{ width: 80 }}\n                    className={classes.position}\n                    type=\"string\"\n                />\n                <Button\n                    variant=\"contained\"\n                    color=\"primary\"\n                    className={classes.button}\n                >\n                  Add\n                </Button>\n                </div>\n            </React.Fragment>\n        </div>\n    )\n}\n\nexport default AddTest;",{"ruleId":"112","replacedBy":"113"},{"ruleId":"114","replacedBy":"115"},{"ruleId":"116","severity":1,"message":"117","line":1,"column":17,"nodeType":"118","messageId":"119","endLine":1,"endColumn":25},{"ruleId":"116","severity":1,"message":"120","line":15,"column":12,"nodeType":"118","messageId":"119","endLine":15,"endColumn":19},{"ruleId":"116","severity":1,"message":"121","line":15,"column":22,"nodeType":"118","messageId":"119","endLine":15,"endColumn":32},{"ruleId":"122","severity":1,"message":"123","line":29,"column":11,"nodeType":"124","endLine":29,"endColumn":37},{"ruleId":"116","severity":1,"message":"125","line":11,"column":5,"nodeType":"118","messageId":"119","endLine":11,"endColumn":10},{"ruleId":"116","severity":1,"message":"126","line":12,"column":5,"nodeType":"118","messageId":"119","endLine":12,"endColumn":21},{"ruleId":"116","severity":1,"message":"127","line":36,"column":12,"nodeType":"118","messageId":"119","endLine":36,"endColumn":23},{"ruleId":"116","severity":1,"message":"128","line":36,"column":24,"nodeType":"118","messageId":"119","endLine":36,"endColumn":38},{"ruleId":"116","severity":1,"message":"117","line":1,"column":17,"nodeType":"118","messageId":"119","endLine":1,"endColumn":25},{"ruleId":"116","severity":1,"message":"129","line":42,"column":12,"nodeType":"118","messageId":"119","endLine":42,"endColumn":24},{"ruleId":"116","severity":1,"message":"130","line":42,"column":25,"nodeType":"118","messageId":"119","endLine":42,"endColumn":40},{"ruleId":"116","severity":1,"message":"117","line":1,"column":17,"nodeType":"118","messageId":"119","endLine":1,"endColumn":25},{"ruleId":"116","severity":1,"message":"131","line":42,"column":12,"nodeType":"118","messageId":"119","endLine":42,"endColumn":25},{"ruleId":"116","severity":1,"message":"132","line":42,"column":26,"nodeType":"118","messageId":"119","endLine":42,"endColumn":42},{"ruleId":"116","severity":1,"message":"117","line":1,"column":17,"nodeType":"118","messageId":"119","endLine":1,"endColumn":25},{"ruleId":"122","severity":1,"message":"123","line":46,"column":29,"nodeType":"124","endLine":46,"endColumn":47},{"ruleId":"122","severity":1,"message":"123","line":65,"column":29,"nodeType":"124","endLine":65,"endColumn":47},{"ruleId":"122","severity":1,"message":"123","line":84,"column":29,"nodeType":"124","endLine":84,"endColumn":47},{"ruleId":"122","severity":1,"message":"123","line":103,"column":29,"nodeType":"124","endLine":103,"endColumn":47},{"ruleId":"122","severity":1,"message":"123","line":122,"column":29,"nodeType":"124","endLine":122,"endColumn":47},{"ruleId":"116","severity":1,"message":"126","line":2,"column":8,"nodeType":"118","messageId":"119","endLine":2,"endColumn":24},{"ruleId":"116","severity":1,"message":"133","line":9,"column":5,"nodeType":"118","messageId":"119","endLine":9,"endColumn":15},{"ruleId":"116","severity":1,"message":"134","line":11,"column":8,"nodeType":"118","messageId":"119","endLine":11,"endColumn":13},{"ruleId":"116","severity":1,"message":"135","line":11,"column":15,"nodeType":"118","messageId":"119","endLine":11,"endColumn":23},{"ruleId":"116","severity":1,"message":"136","line":14,"column":10,"nodeType":"118","messageId":"119","endLine":14,"endColumn":18},{"ruleId":"116","severity":1,"message":"117","line":1,"column":17,"nodeType":"118","messageId":"119","endLine":1,"endColumn":25},{"ruleId":"116","severity":1,"message":"137","line":4,"column":5,"nodeType":"118","messageId":"119","endLine":4,"endColumn":10},{"ruleId":"116","severity":1,"message":"138","line":45,"column":12,"nodeType":"118","messageId":"119","endLine":45,"endColumn":20},{"ruleId":"116","severity":1,"message":"139","line":45,"column":22,"nodeType":"118","messageId":"119","endLine":45,"endColumn":33},{"ruleId":"116","severity":1,"message":"140","line":46,"column":12,"nodeType":"118","messageId":"119","endLine":46,"endColumn":20},{"ruleId":"116","severity":1,"message":"141","line":46,"column":23,"nodeType":"118","messageId":"119","endLine":46,"endColumn":34},{"ruleId":"122","severity":1,"message":"123","line":101,"column":29,"nodeType":"124","endLine":101,"endColumn":54},{"ruleId":"116","severity":1,"message":"142","line":5,"column":5,"nodeType":"118","messageId":"119","endLine":5,"endColumn":11},{"ruleId":"116","severity":1,"message":"143","line":6,"column":5,"nodeType":"118","messageId":"119","endLine":6,"endColumn":15},{"ruleId":"116","severity":1,"message":"144","line":8,"column":5,"nodeType":"118","messageId":"119","endLine":8,"endColumn":16},{"ruleId":"116","severity":1,"message":"145","line":10,"column":5,"nodeType":"118","messageId":"119","endLine":10,"endColumn":13},{"ruleId":"116","severity":1,"message":"125","line":11,"column":5,"nodeType":"118","messageId":"119","endLine":11,"endColumn":10},{"ruleId":"116","severity":1,"message":"126","line":12,"column":5,"nodeType":"118","messageId":"119","endLine":12,"endColumn":21},{"ruleId":"116","severity":1,"message":"146","line":41,"column":12,"nodeType":"118","messageId":"119","endLine":41,"endColumn":19},{"ruleId":"116","severity":1,"message":"147","line":41,"column":20,"nodeType":"118","messageId":"119","endLine":41,"endColumn":30},{"ruleId":"116","severity":1,"message":"148","line":45,"column":12,"nodeType":"118","messageId":"119","endLine":45,"endColumn":22},{"ruleId":"116","severity":1,"message":"149","line":45,"column":23,"nodeType":"118","messageId":"119","endLine":45,"endColumn":36},"no-native-reassign",["150"],"no-negated-in-lhs",["151"],"no-unused-vars","'useState' is defined but never used.","Identifier","unusedVar","'reagent' is assigned a value but never used.","'setReagent' is assigned a value but never used.","react/jsx-no-duplicate-props","No duplicate props allowed","JSXAttribute","'theme' is defined but never used.","'CircularProgress' is defined but never used.","'addCustomer' is assigned a value but never used.","'setAddCustomer' is assigned a value but never used.","'sampleFields' is assigned a value but never used.","'setSampleFields' is assigned a value but never used.","'importReagent' is assigned a value but never used.","'setImportReagent' is assigned a value but never used.","'StepButton' is defined but never used.","'axios' is defined but never used.","'setToken' is defined but never used.","'Redirect' is defined but never used.","'Paper' is defined but never used.","'username' is assigned a value but never used.","'setUsername' is assigned a value but never used.","'password' is assigned a value but never used.","'setPassword' is assigned a value but never used.","'Select' is defined but never used.","'InputLabel' is defined but never used.","'FormControl' is defined but never used.","'MenuItem' is defined but never used.","'addTest' is assigned a value but never used.","'setAddTest' is assigned a value but never used.","'parameters' is assigned a value but never used.","'setParameters' is assigned a value but never used.","no-global-assign","no-unsafe-negation"]