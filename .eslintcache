[{"/home/sherlock/Workdev/lims-frontend/src/index.js":"1","/home/sherlock/Workdev/lims-frontend/src/App.js":"2","/home/sherlock/Workdev/lims-frontend/src/reducers/index.js":"3","/home/sherlock/Workdev/lims-frontend/src/reducers/authReducer.js":"4","/home/sherlock/Workdev/lims-frontend/src/Components/PendingSample.js":"5","/home/sherlock/Workdev/lims-frontend/src/Components/AddTest.js":"6","/home/sherlock/Workdev/lims-frontend/src/Components/AddCutomer.js":"7","/home/sherlock/Workdev/lims-frontend/src/Components/AddReagent.js":"8","/home/sherlock/Workdev/lims-frontend/src/Components/ImportReagent.js":"9","/home/sherlock/Workdev/lims-frontend/src/Components/AllReagent.js":"10","/home/sherlock/Workdev/lims-frontend/src/Components/AllSample.js":"11","/home/sherlock/Workdev/lims-frontend/src/Components/register.js":"12","/home/sherlock/Workdev/lims-frontend/src/Components/appBar.js":"13","/home/sherlock/Workdev/lims-frontend/src/Components/login.js":"14","/home/sherlock/Workdev/lims-frontend/src/action/setUser.js":"15","/home/sherlock/Workdev/lims-frontend/src/api/index.js":"16","/home/sherlock/Workdev/lims-frontend/src/validation/validator.js":"17","/home/sherlock/Workdev/lims-frontend/src/Components/AddSample.js":"18","/home/sherlock/Workdev/lims-frontend/src/Components/SnackBar.js":"19"},{"size":562,"mtime":1613919733576,"results":"20","hashOfConfig":"21"},{"size":2034,"mtime":1615902186101,"results":"22","hashOfConfig":"21"},{"size":168,"mtime":1615370998950,"results":"23","hashOfConfig":"21"},{"size":181,"mtime":1615370998950,"results":"24","hashOfConfig":"21"},{"size":4990,"mtime":1614271858541,"results":"25","hashOfConfig":"21"},{"size":3101,"mtime":1614533977658,"results":"26","hashOfConfig":"21"},{"size":6597,"mtime":1615921458632,"results":"27","hashOfConfig":"21"},{"size":2709,"mtime":1614104044327,"results":"28","hashOfConfig":"21"},{"size":3108,"mtime":1615279268021,"results":"29","hashOfConfig":"21"},{"size":1388,"mtime":1614453258668,"results":"30","hashOfConfig":"21"},{"size":6566,"mtime":1614531692248,"results":"31","hashOfConfig":"21"},{"size":5871,"mtime":1614435146631,"results":"32","hashOfConfig":"21"},{"size":5214,"mtime":1615569986044,"results":"33","hashOfConfig":"21"},{"size":3327,"mtime":1615880838982,"results":"34","hashOfConfig":"21"},{"size":99,"mtime":1615370998950,"results":"35","hashOfConfig":"21"},{"size":179,"mtime":1615880595088,"results":"36","hashOfConfig":"21"},{"size":941,"mtime":1615919563804,"results":"37","hashOfConfig":"21"},{"size":7874,"mtime":1615808380666,"results":"38","hashOfConfig":"21"},{"size":543,"mtime":1615921362346,"results":"39","hashOfConfig":"21"},{"filePath":"40","messages":"41","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"42"},"uw0g8g",{"filePath":"43","messages":"44","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"45","usedDeprecatedRules":"42"},{"filePath":"46","messages":"47","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"42"},{"filePath":"48","messages":"49","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"42"},{"filePath":"50","messages":"51","errorCount":0,"warningCount":6,"fixableErrorCount":0,"fixableWarningCount":0,"source":"52","usedDeprecatedRules":"42"},{"filePath":"53","messages":"54","errorCount":0,"warningCount":10,"fixableErrorCount":0,"fixableWarningCount":0,"source":"55","usedDeprecatedRules":"42"},{"filePath":"56","messages":"57","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"58","usedDeprecatedRules":"42"},{"filePath":"59","messages":"60","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"61","usedDeprecatedRules":"42"},{"filePath":"62","messages":"63","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"64","usedDeprecatedRules":"42"},{"filePath":"65","messages":"66","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"67","usedDeprecatedRules":"42"},{"filePath":"68","messages":"69","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"70","usedDeprecatedRules":"42"},{"filePath":"71","messages":"72","errorCount":0,"warningCount":6,"fixableErrorCount":0,"fixableWarningCount":0,"source":"73","usedDeprecatedRules":"42"},{"filePath":"74","messages":"75","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"42"},{"filePath":"76","messages":"77","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"78","usedDeprecatedRules":"42"},{"filePath":"79","messages":"80","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"42"},{"filePath":"81","messages":"82","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"42"},{"filePath":"83","messages":"84","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"85","usedDeprecatedRules":"86"},{"filePath":"87","messages":"88","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"89","usedDeprecatedRules":"42"},{"filePath":"90","messages":"91","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"42"},"/home/sherlock/Workdev/lims-frontend/src/index.js",[],["92","93"],"/home/sherlock/Workdev/lims-frontend/src/App.js",["94","95"],"import AppBar from \"./Components/appBar\";\nimport AddCustomer from \"./Components/AddCutomer\";\nimport AddReagent from \"./Components/AddReagent\";\nimport AddTest from \"./Components/AddTest\";\nimport ImportReagent from \"./Components/ImportReagent\";\nimport PendingSample from \"./Components/PendingSample\";\nimport AllSample from \"./Components/AllSample\";\nimport AllReagent from \"./Components/AllReagent\";\nimport AddSample from \"./Components/AddSample\";\nimport {\n  BrowserRouter as Router,\n  Redirect,\n  Route,\n  Switch,\n} from \"react-router-dom\";\nimport jwt_decode from \"jwt-decode\";\nimport { useDispatch } from \"react-redux\";\nimport { useState } from \"react\";\nimport Login from \"./Components/login\";\nimport Register from \"./Components/register\";\nimport { setUser } from \"./action/setUser\";\nimport { setToken } from \"./api\";\n\nfunction App() {\n  const dispatch = useDispatch();\n  const token = localStorage.getItem(\"token\");\n  const [isLogin, setLogin] = useState(token ? true : false);\n  if (token) {\n    try {\n      const decoded = jwt_decode(token);\n      dispatch(setUser(decoded.id, decoded.role));\n    } catch (e) {\n      localStorage.removeItem(\"token\");\n      setLogin(false);\n    }\n  }\n\n  return isLogin ? (\n    <Router>\n      <div className=\"App\">\n        <AppBar />\n        <Switch>\n          <Route path=\"/\" exact component={PendingSample} />\n          <Route path=\"/addCustomer\" component={AddCustomer} />\n          <Route path=\"/addReagent\" component={AddReagent} />\n          <Route path=\"/addTest\" component={AddTest} />\n          <Route path=\"/importReagent\" component={ImportReagent} />\n          <Route path=\"/allSample\" component={AllSample} />\n          <Route path=\"/allReagent\" component={AllReagent} />\n          <Route path=\"/addSample\"  component={AddSample} />\n          <Route path=\"/register\" exact component={Register} />\n          <Route path=\"/login\" exact component={Login} />\n        </Switch>\n      </div>\n    </Router>\n  ) : (\n    <Login isLogin={isLogin} setLogin={setLogin} />\n  );\n}\n\nexport default App;\n","/home/sherlock/Workdev/lims-frontend/src/reducers/index.js",[],"/home/sherlock/Workdev/lims-frontend/src/reducers/authReducer.js",[],"/home/sherlock/Workdev/lims-frontend/src/Components/PendingSample.js",["96","97","98","99","100","101"],"import React, { useState} from \"react\";\nimport {\n  TableContainer,\n  Table,\n  TableHead,\n  TableRow,\n  TableCell,\n  TableBody,\n  Button\n} from \"@material-ui/core\";\nimport { Style } from \"@material-ui/icons\";\n\n\nconst PendingSample = () => {\n    \n    return (\n        <div>\n             <div style={Styles.table}>\n        <TableContainer style={Styles.tables}>\n        <Table stickyHeader aria-label=\"sticky table\">\n        <TableHead>\n          <TableRow>\n            <TableCell>Sample Id</TableCell>\n            <TableCell>Test</TableCell>\n            <TableCell>Customer Name</TableCell>\n            <TableCell>Due Date</TableCell>\n            <TableCell>Payment</TableCell>\n            <TableCell>Collected By</TableCell>\n            <TableCell>Status</TableCell>\n          </TableRow>\n        </TableHead>\n        <TableBody>\n            <TableRow>\n                <TableCell>101</TableCell>\n                <TableCell>Urine Test</TableCell>\n                <TableCell>Rajesh</TableCell>\n                <TableCell>2020/01/20</TableCell>\n                <TableCell>1500</TableCell>\n                <TableCell>Ravish</TableCell>\n                <TableCell style={Style.text}>Pending</TableCell>\n                <TableCell>\n                <Button\n                         style={Styles.button}\n                            variant=\"contained\"\n                            color=\"primary\"\n                            color=\"black-text\"\n                        >\n                           Generate Report\n                        </Button>\n                </TableCell>\n            </TableRow>\n            <TableRow>\n                <TableCell>101</TableCell>\n                <TableCell>Urine Test</TableCell>\n                <TableCell>Rajesh</TableCell>\n                <TableCell>2020/01/20</TableCell>\n                <TableCell>1500</TableCell>\n                <TableCell>Ravish</TableCell>\n                <TableCell style={Style.text}>Pending</TableCell>\n                <TableCell>\n                <Button\n                         style={Styles.button}\n                            variant=\"contained\"\n                            color=\"primary\"\n                            color=\"black-text\"\n                        >\n                           Generate Report\n                        </Button>\n                </TableCell>\n            </TableRow>\n            <TableRow>\n                <TableCell>101</TableCell>\n                <TableCell>Urine Test</TableCell>\n                <TableCell>Rajesh</TableCell>\n                <TableCell>2020/01/20</TableCell>\n                <TableCell>1500</TableCell>\n                <TableCell>Ravish</TableCell>\n                <TableCell color=\"secondary\">Pending</TableCell>\n                <TableCell>\n                <Button\n                         style={Styles.button}\n                            variant=\"contained\"\n                            color=\"primary\"\n                            color=\"black-text\"\n                        >\n                           Generate Report\n                        </Button>\n                </TableCell>\n            </TableRow>\n            <TableRow>\n                <TableCell>101</TableCell>\n                <TableCell>Urine Test</TableCell>\n                <TableCell>Rajesh</TableCell>\n                <TableCell>2020/01/20</TableCell>\n                <TableCell>1500</TableCell>\n                <TableCell>Ravish</TableCell>\n                <TableCell color=\"secondary\">Pending</TableCell>\n                <TableCell>\n                <Button\n                         style={Styles.button}\n                            variant=\"contained\"\n                            color=\"primary\"\n                            color=\"black-text\"\n                        >\n                           Generate Report\n                        </Button>\n                </TableCell>\n            </TableRow>\n            <TableRow>\n                <TableCell>101</TableCell>\n                <TableCell>Urine Test</TableCell>\n                <TableCell>Rajesh</TableCell>\n                <TableCell>2020/01/20</TableCell>\n                <TableCell>1500</TableCell>\n                <TableCell>Ravish</TableCell>\n                <TableCell>Pending</TableCell>\n                <TableCell>\n                <Button\n                         style={Styles.button}\n                            variant=\"contained\"\n                            color=\"primary\"\n                            color=\"black-text\"\n                        >\n                           Generate Report\n                        </Button>\n                </TableCell>\n            </TableRow>\n        </TableBody>\n        </Table>\n        </TableContainer>\n        </div>\n        </div>\n    )\n}\n\nconst Styles = {\n    tables: {\n        height: \"380px\",\n      },\n      table: {\n        marginTop:\"7%\",\n        marginLeft: \"3%\",\n      },\n      button: {\n        marginTop: \"1rem\",\n        backgroundColor:\"#27E208\",\n        \n    },\n  \n}\n\n\nexport default PendingSample;","/home/sherlock/Workdev/lims-frontend/src/Components/AddTest.js",["102","103","104","105","106","107","108","109","110","111"],"import React from 'react';\nimport \"./myStyle.css\";\nimport {\n    makeStyles,\n    Select,\n    InputLabel,\n    Button,\n    FormControl,\n    TextField,\n    MenuItem,\n    theme,\n    CircularProgress,\n} from \"@material-ui/core\";\n\nconst useStyles = makeStyles(theme => ({\n    body:{\n        padding: \"1em 2em 2em 2em\",\n        margin: \"4em 2em 2em 2em\"\n    },\n    root: {\n        display: \"flex\",\n    },\n    position: {\n        marginLeft: theme.spacing(8),\n        flex : \"1 auto\",\n    },\n    buttons: {\n        marginTop: theme.spacing(6),\n        marginLeft: theme.spacing(120)\n    },\n    button:{\n        marginLeft: theme.spacing(6),\n        width: \"200px\",\n        paddingLeft:\"20px\",\n        height: \"3.3em\"\n    }\n}));\n\nconst AddTest = () => {\n    const classes = useStyles();\n    const [addTest,setAddTest]=React.useState({\n        testName:\"\",\n        testAmount:\"\",\n    });\n    const [parameters,setParameters] =React.useState({\n        parameter:[],\n        unit:[],\n        refrenceRange:[]\n    })\n    return (\n        <div className={classes.body}>\n            <React.Fragment> \n                <h4>Test Details</h4>\n            <div className={classes.root}>\n                <TextField\n                    label=\"Test Name\"\n                    variant=\"outlined\"\n                    // value={addTest.testName}\n                    style={{ width: 80 }}\n                    className={classes.position}\n                    type = \"string\"\n                />\n                  <TextField\n                    label=\"Test Amount\"\n                    variant=\"outlined\"\n                    // value={addTest.testAmount}\n                    style={{ width: 80 }}\n                    className={classes.position}\n                    type=\"number\"\n                /> \n                </div>\n                <h4>Bio-Chemical Parameters</h4>\n            <div className={classes.root}>\n                <TextField\n                    label=\"Parameter\"\n                    variant=\"outlined\"\n                    // value={parameters.parameter}\n                    style={{ width: 80 }}\n                    className={classes.position}\n                    type = \"string\"\n                />\n                  <TextField\n                    label=\"unit\"\n                    variant=\"outlined\"\n                    // value={parameters.unit}\n                    style={{ width: 80 }}\n                    className={classes.position}\n                    type=\"string\"\n                /> \n                  <TextField\n                    label=\"Refrence Range\"\n                    variant=\"outlined\"\n                    // value={parameters.refrenceRange}\n                    style={{ width: 80 }}\n                    className={classes.position}\n                    type=\"string\"\n                />\n                <Button\n                    variant=\"contained\"\n                    color=\"primary\"\n                    className={classes.button}\n                >\n                  Add\n                </Button>\n                </div>\n            </React.Fragment>\n        </div>\n    )\n}\n\nexport default AddTest;","/home/sherlock/Workdev/lims-frontend/src/Components/AddCutomer.js",["112","113","114"],"import React from 'react';\nimport \"./myStyle.css\";\nimport {\n    makeStyles,\n    Select,\n    InputLabel,\n    Button,\n    FormControl,\n    TextField,\n    MenuItem,\n    theme,\n    CircularProgress,\n    Paper,\n} from \"@material-ui/core\";\nimport  addCustomerValidation  from \"../validation/validator\";\nimport axios from \"../api\";\nimport SnackBar from \"./SnackBar\";\n\nconst useStyles = makeStyles(theme => ({\n    root: {\n        display: \"flex\",\n        marginBottom: theme.spacing(7)\n        \n    },\n    position: {\n        marginLeft: theme.spacing(8),\n        flex : \"1 auto\",\n    },\n    buttons: {\n        marginTop: theme.spacing(6),\n        marginLeft: theme.spacing(120)\n    },\n    button:{\n        margin:\"5px 10px 5px 5px\"\n    },\n    label:{\n         marginLeft: theme.spacing(9)\n    }\n}));\n  \n\nconst AddCutomer = () => {\n    const classes = useStyles();\n    const [addCustomer,setAddCustomer]=React.useState({\n        firstName:\"\",\n        lastName:\"\",\n        age:0,\n        address:\"\",\n        gender:\"\",\n        contactNumber:0,\n    });\n    const [reset , setReset]= React.useState(Object.assign({},addCustomer));\n    const [open, setOpen] = React.useState(false);\n    const [message,setMessage]= React.useState(\"\");\n    const [status,setStatus]= React.useState(\"\");\n\n    const handleClick = () => {\n      setOpen(true);\n    };\n  \n    const handleClose = (event, reason) => {\n      if (reason === 'clickaway') {\n        return;\n      }\n  \n      setOpen(false);\n    };\n\n    const handleChange = (input) => event => {\n        setAddCustomer({ ...addCustomer, [input]: event.target.value });\n    };\n\n    const handleReset =()=>{\n        setAddCustomer({...reset});\n    }\n\n    const handleSubmit = async() =>{\n        const {error} = addCustomerValidation(addCustomer);\n        if(error){\n        setMessage(error.details[0].message);\n        setStatus(\"error\");\n        handleClick();\n    }\n        if (error){\n            console.log(error.details[0].message);\n        }\n        if(!error){\n            try{\n            const res = await axios.post(\"/customer/add\",addCustomer);\n            setMessage(res.data);\n            setStatus(\"success\");\n            handleClick();\n            console.log(res.data);\n            console.log(reset);\n            setAddCustomer({...reset});\n            }\n            catch(e){\n                setMessage(e);\n                setStatus(\"error\");\n                handleClick();\n                console.log(e);\n            }\n        }\n    }\n\n    return (\n        <div>\n           <React.Fragment>\n           <Paper\n                style={{\n                    padding: \"1em 2em 2em 2em\",\n                    margin: \"8em 2em 2em 2em\"\n                }}\n                elevation={3}\n            >\n            <h1 align=\"center\">Customer Registration Page</h1>\n           <h4>Customer Details</h4>\n            <div className={classes.root}>\n                <TextField\n                    name=\"First Name\"\n                    label=\"First Name\"\n                    variant=\"outlined\"\n                    value={addCustomer.firstName}\n                    style={{ width: 80 }}\n                    className={classes.position}\n                    type = \"string\"\n                    onChange={handleChange(\"firstName\")}\n                />\n                   <TextField\n                    label=\"Last Name\"\n                    variant=\"outlined\"\n                    value={addCustomer.lastName}\n                    style={{ width: 80 }}\n                    className={classes.position}\n                    type = \"string\"\n                    onChange={handleChange(\"lastName\")}\n                />\n                  <TextField\n                    label=\"Age\"\n                    variant=\"outlined\"\n                    value={addCustomer.age}\n                    style={{ width: 80 }}\n                    className={classes.position}\n                    type=\"number\"\n                   onChange={handleChange(\"age\")}\n                />\n            </div>\n            <div className={classes.root}>\n            <FormControl className={classes.formControl}>\n                  <InputLabel className={classes.label}>Gender</InputLabel>\n                        <Select\n                        labelId=\"demo-controlled-open-select-label\"\n                        id=\"demo-controlled-open-select\"\n                        value={addCustomer.gender}\n                        label=\"Gender\"\n                        className={classes.position}\n                        style={{ width: 120}}\n                       onChange={handleChange(\"gender\")}\n                        >\n                        <MenuItem value=\"male\">Male</MenuItem>\n                        <MenuItem value=\"female\">Female</MenuItem>\n                        <MenuItem value=\"others\">Others</MenuItem>\n                        </Select>\n                </FormControl> \n            <TextField\n                    label=\"Location\"\n                    variant=\"outlined\"\n                    value={addCustomer.address}\n                    style={{ width: 80 }}\n                    className={classes.position}\n                    type=\"string\"\n                   onChange={handleChange(\"address\")}\n            />\n             <TextField\n                    label=\"Contact Number\"\n                    variant=\"outlined\"\n                    value={addCustomer.contactNumber}\n                    style={{ width: 80 }}\n                    className={classes.position}\n                    type=\"number\"\n                   onChange={handleChange(\"contactNumber\")}\n                />\n\n            </div>\n            <div>\n            <div className={classes.buttons}>\n                <Button\n                    variant=\"contained\"\n                    style={{ width: \"200px\",paddingLeft:\"20px\" }}\n                    color=\"primary\"\n                    className={classes.button}\n                    onClick={handleSubmit}\n                >\n                  Add\n                </Button>\n                <Button\n                    variant=\"contained\"\n                    style={{ width: \"200px\" ,paddingRight:\"20px\"}}\n                    color=\"secondary\"\n                    className={classes.button}\n                    onClick={handleReset}\n                >\n                    Reset\n                </Button>\n            </div>\n            </div>\n            </Paper>\n            </React.Fragment>\n            <SnackBar\n            messege={message}\n            open = {open}\n            handleClose={handleClose}\n            status={status}\n            />\n        </div>\n    )\n}\n\nexport default AddCutomer;","/home/sherlock/Workdev/lims-frontend/src/Components/AddReagent.js",["115","116","117","118"],"import React, { useState} from \"react\";\nimport {\n  TextField,\n  Button,\n  CssBaseline,\n  TableContainer,\n  Table,\n  TableHead,\n  TableRow,\n  TableCell,\n  TableBody\n} from \"@material-ui/core\";\n\nconst AddReagent=()=>{\n    const [reagent , setReagent] = React.useState({\n        reagentName:\"\",\n        unit:\"\",\n        voulme:\"\"\n    })\n    return(\n     <CssBaseline>\n      <div style={Styles.inputfiled}>\n        <TextField\n          style={Styles.inputfileds}\n          id=\"reagentName\"\n          label=\"Name Of Reagent\"\n          type=\"string\"\n          variant=\"outlined\"\n          style={Styles.inputfileds}\n        //   value={reagent.reagentName}\n        />\n        <TextField\n          style={Styles.inputfileds}\n          label=\"Unit Of Reagent\"\n          variant=\"outlined\"\n        //   value={reagent.unit}\n        />\n        <TextField\n          style={Styles.inputfileds}\n          label=\"Volume\"\n          variant=\"outlined\"\n          type=\"number\"\n        //   value={reagent.voulme}\n        />\n\n        <Button\n          variant=\"contained\"\n          color=\"primary\"\n          onClick={()=>{}}\n          style={Styles.button}\n        >\n          Add\n        </Button>\n        </div>\n        <div style={Styles.table}>\n        <TableContainer style={Styles.tables}>\n        <Table stickyHeader aria-label=\"sticky table\">\n        <TableHead>\n          <TableRow>\n            <TableCell>Reagent Name</TableCell>\n            <TableCell>Unit</TableCell>\n          </TableRow>\n        </TableHead>\n        <TableBody>\n            <TableRow>\n                <TableCell>Hcl</TableCell>\n                <TableCell>ml</TableCell>\n\n        <Button\n          variant=\"contained\"\n          color=\"secondary\"\n          onClick={()=>{}}\n          style={Styles.button}\n        >\n            Delete\n            </Button>\n            </TableRow>\n            <TableRow>\n                <TableCell>Hcl</TableCell>\n                <TableCell>ml</TableCell>\n\n        <Button\n          variant=\"contained\"\n          color=\"secondary\"\n          onClick={()=>{}}\n          style={Styles.button}\n        >\n            Delete\n            </Button>\n            </TableRow>\n        </TableBody>\n        </Table>\n        </TableContainer>\n        </div>\n    </CssBaseline>\n    )\n}\n\nconst Styles = {\n    inputfiled: {\n      marginTop: \"6%\",\n      marginLeft: \"5%\",\n      marginBottom: \"2%\",\n      display: \"flex\",\n    },\n    inputfileds: {\n      marginTop: \"3%\",\n      marginLeft: \"3%\",\n      marginBottom: \"2%\",\n    },\n    button: {\n      marginTop: \"3%\",\n      marginLeft: \"5%\",\n      height: 50,\n    },\n    tables: {\n      height: \"380px\",\n    },\n    table: {\n      marginLeft: \"3%\",\n    },\n  };\n\nexport default AddReagent;","/home/sherlock/Workdev/lims-frontend/src/Components/ImportReagent.js",["119","120","121"],"import React, { useState } from \"react\";\nimport \"./myStyle.css\";\nimport {\n    TextField,\n    Paper,\n    makeStyles,\n    Button,\n   Select,\n   MenuItem,\n   InputLabel,\n   FormControl\n} from \"@material-ui/core\";\nconst styles = makeStyles({\n    paper: {\n        display: \"flex\",\n        justifyContent: \"center\",\n        alignItems: \"center\",\n        flexDirection: \"column\",\n        height: \"100%\",\n        width: \"100%\",\n        margin: \"30\",\n        padding: \"5\",\n        backgroundColor: \"#f7f7f7\",\n\n    },\n    input: {\n        display: \"flex\",\n        flexDirection: \"column\",\n        justifyContent:\"space-around\"\n    },\n    items:{\n     height:\"80%\"\n    },\n    button: {\n        marginTop: \"2rem\",\n    }\n});\n\n\nconst ImportReagent = () => {\n    const classes = styles();\n    const [importReagent,setImportReagent] = React.useState({\n        reagent:\"\",\n        unit:\"\",\n        vloume:\"\"\n    })\n\n    // const handleChange = (event) => {\n    //     setRole(event.target.value);\n    //   };\n    return (\n        <div>\n                   <React.Fragment>\n        <Paper style={{ height: \"100vh\" }}>\n                <div className={classes.paper}>\n                    <div className={classes.input}>\n                        <FormControl className={classes.formControl}>\n                         <InputLabel id=\"demo-customized-select-label\">Name Of Reagent</InputLabel>\n                         <Select\n                        labelId=\"demo-customized-select-label\"\n                        id=\"demo-customized-select\"\n                        // value={reagent}\n                        // onChange={handleChange}\n                        >\n                        <MenuItem value=\"hcl\">Hcl</MenuItem>\n                        <MenuItem value=\"H2so4\">H2SO4</MenuItem>\n                        </Select>\n                    </FormControl>\n                    <FormControl className={classes.formControl}>\n                         <InputLabel id=\"demo-customized-select-label\">Unit Of Reagent</InputLabel>\n                         <Select\n                        labelId=\"demo-customized-select-label\"\n                        id=\"demo-customized-select\"\n                        // value={unit}\n                        // onChange={handleChange}\n                        >\n                        <MenuItem value=\"ml\">ml</MenuItem>\n                        <MenuItem value=\"l\">l</MenuItem>\n                        </Select>\n                    </FormControl>\n                    <TextField\n                            name=\"voume\"\n                            label=\"Volume\"\n                            // value={voulme}\n                            variant=\"filled\"     \n                        />\n\n                        <Button\n                            className={classes.button}\n                            variant=\"contained\"\n                            color=\"primary\"\n                        >\n                            Add \n                        </Button>\n                    </div>\n                </div>\n            </Paper>\n        </React.Fragment>\n        </div>\n    )\n}\nexport default ImportReagent;","/home/sherlock/Workdev/lims-frontend/src/Components/AllReagent.js",["122"],"import React, { useState} from \"react\";\nimport {\n  TableContainer,\n  Table,\n  TableHead,\n  TableRow,\n  TableCell,\n  TableBody,\n  Paper\n} from \"@material-ui/core\";\n\nconst AllReagent = () => {\n    return (\n        <div>\n          <Paper style={Styles.Paper} elevation=\"2\">\n             <div style={Styles.table}>\n        <TableContainer style={Styles.tables}>\n        <Table stickyHeader aria-label=\"sticky table\">\n        <TableHead>\n          <TableRow>\n            <TableCell>Reagent Name</TableCell>\n            <TableCell>Unit</TableCell>\n            <TableCell>Volume</TableCell>\n          </TableRow>\n        </TableHead>\n        <TableBody>\n            <TableRow>\n                <TableCell>Hcl</TableCell>\n                <TableCell>ml</TableCell>\n                <TableCell>1000</TableCell>\n            </TableRow>\n            <TableRow>\n                <TableCell>Hcl</TableCell>\n                <TableCell>ml</TableCell>\n                <TableCell>2000</TableCell>\n            </TableRow>\n        </TableBody>\n        </Table>\n        </TableContainer>\n        </div>\n        </Paper>\n        </div>\n    )\n}\n\nconst Styles = {\n    tables: {\n        height: \"380px\",\n      },\n      table: {\n        marginTop:\"7%\",\n        // marginLeft: \"3%\",\n      },\n      Paper:{\n        marginTop:\"7%\",\n        marginLeft: \"3%\",\n        marginRight: \"3%\"\n      }\n}\n\nexport default AllReagent;","/home/sherlock/Workdev/lims-frontend/src/Components/AllSample.js",["123","124","125"],"import React, { useState} from \"react\";\nimport {\n    TextField,\n    makeStyles,\n    Button,\n   TableContainer,\n   Table,\n   TableHead,\n   TableRow,\n   TableCell,\n   TableBody\n} from \"@material-ui/core\";\nimport SearchIcon from '@material-ui/icons/Search';\n\nconst styles = makeStyles({\n    paper: {\n        marginTop: \"7%\",\n        marginLeft: \"5%\",\n        marginBottom: \"2%\",\n        display: \"flex\",\n        justifyContent:\"space-between\"\n    },\n    items:{\n     flex:\"1 1 1 1 auto\",\n     width:\"20em\",\n    },\n    button: {\n        margin: \"13px 12px 12px 10px\",\n        backgroundColor:\"#27E208\"\n    },\n    tables: {\n        height: \"380px\",\n      },\n      table: {\n        marginTop:\"5%\",\n        marginLeft: \"3%\",\n      },\n});\n\nconst AllSample = () => {\n    const classes = styles();\n    const [sampleFields,setSampleFields] = React.useState({\n        customerName:\"\",\n        date:\"\",\n        sampleId:\"\"\n    })\n    return (\n        <React.Fragment>\n                <div className={classes.paper}>\n                    <TextField\n                            name=\"CustomerName\"\n                            label=\"Customer Name\"\n                            // value={sampleFields.customerName}\n                            variant=\"filled\" \n                            className={classes.items}\n                        />\n                        <TextField\n                            // type=\"password\"\n                            name=\"Date\"\n                            // value={sampleFields.date}\n                            variant=\"filled\"\n                            type=\"date\"\n                            className={classes.items}\n                        />\n                           <TextField\n                            name=\"SampleId\"\n                            label=\"Sample Id\"\n                            // value={sampleFields.sampleId}\n                            variant=\"filled\" \n                            className={classes.items}\n                        />\n                        <Button\n                            variant=\"contained\"\n                            color=\"primary\"\n                            className={classes.items}\n                        >\n                            <SearchIcon/>\n                            Search\n                        </Button>\n                    </div>\n                    <div className={classes.table}>\n                    <TableContainer className={classes.tables}>\n        <Table stickyHeader aria-label=\"sticky table\">\n        <TableHead>\n          <TableRow>\n            <TableCell>Sample Id</TableCell>\n            <TableCell>Test</TableCell>\n            <TableCell>Customer Name</TableCell>\n            <TableCell>Due Date</TableCell>\n            <TableCell>Payment</TableCell>\n            <TableCell>Collected By</TableCell>\n            <TableCell>Status</TableCell>\n          </TableRow>\n        </TableHead>\n        <TableBody>\n            <TableRow>\n                <TableCell>101</TableCell>\n                <TableCell>Urine Test</TableCell>\n                <TableCell>Rajesh</TableCell>\n                <TableCell>2020/01/20</TableCell>\n                <TableCell>1500</TableCell>\n                <TableCell>Ravish</TableCell>\n                <TableCell >Pending</TableCell>\n                <TableCell>\n                <Button\n                          className={classes.button}\n                            variant=\"contained\"\n                            color=\"black-text\"\n                        >\n                           Generate Report\n                        </Button>\n                </TableCell>\n            </TableRow>\n            <TableRow>\n                <TableCell>101</TableCell>\n                <TableCell>Urine Test</TableCell>\n                <TableCell>Rajesh</TableCell>\n                <TableCell>2020/01/20</TableCell>\n                <TableCell>1500</TableCell>\n                <TableCell>Ravish</TableCell>\n                <TableCell >Done</TableCell>\n                <TableCell>\n                <Button\n                        className={classes.button}\n                            variant=\"contained\"\n                            color=\"black-text\"\n                        >\n                           Show Info\n                        </Button>\n                </TableCell>\n            </TableRow>\n            <TableRow>\n                <TableCell>101</TableCell>\n                <TableCell>Urine Test</TableCell>\n                <TableCell>Rajesh</TableCell>\n                <TableCell>2020/01/20</TableCell>\n                <TableCell>1500</TableCell>\n                <TableCell>Ravish</TableCell>\n                <TableCell >Pending</TableCell>\n                <TableCell>\n                <Button\n                        className={classes.button}\n                            variant=\"contained\"\n                            color=\"black-text\"\n                        >\n                           Generate Report\n                        </Button>\n                </TableCell>\n            </TableRow>\n            <TableRow>\n                <TableCell>101</TableCell>\n                <TableCell>Urine Test</TableCell>\n                <TableCell>Rajesh</TableCell>\n                <TableCell>2020/01/20</TableCell>\n                <TableCell>1500</TableCell>\n                <TableCell>Ravish</TableCell>\n                <TableCell >Pending</TableCell>\n                <TableCell>\n                <Button\n                        className={classes.button}\n                            variant=\"contained\"\n                            color=\"black-text\"\n                        >\n                           Generate Report\n                        </Button>\n                </TableCell>\n            </TableRow>\n            <TableRow>\n                <TableCell>101</TableCell>\n                <TableCell>Urine Test</TableCell>\n                <TableCell>Rajesh</TableCell>\n                <TableCell>2020/01/20</TableCell>\n                <TableCell>1500</TableCell>\n                <TableCell>Ravish</TableCell>\n                <TableCell >Pending</TableCell>\n                <TableCell>\n                <Button\n                        className={classes.button}\n                            variant=\"contained\"\n                            color=\"black-text\"\n                        >\n                           Generate Report\n                        </Button>\n                </TableCell>\n            </TableRow>\n        </TableBody>\n        </Table>\n        </TableContainer>\n        </div>\n        </React.Fragment>\n    )\n}\n\nexport default AllSample;\n","/home/sherlock/Workdev/lims-frontend/src/Components/register.js",["126","127","128","129","130","131"],"import React, { useState } from \"react\";\nimport {\n    TextField,\n    Paper,\n    makeStyles,\n    Button,\n   Select,\n   MenuItem,\n   InputLabel,\n   FormControl,\n   TableContainer,\n   Table,\n   TableHead,\n   TableRow,\n   TableCell,\n   TableBody\n} from \"@material-ui/core\";\nconst styles = makeStyles({\n    paper: {\n        marginTop: \"10%\",\n        marginLeft: \"5%\",\n        marginBottom: \"2%\",\n        display: \"flex\",\n        justifyContent:\"space-between\"\n    },\n    items:{\n     flex:\"1 1 1 1 auto\",\n     width:\"20em\"\n    },\n    button: {\n        margin: \"13px 12px 12px 10px\",\n    },\n    tables: {\n        height: \"380px\",\n      },\n      table: {\n        marginTop:\"7%\",\n        marginLeft: \"3%\",\n      },\n});\n\n\nconst Register = () => {\n    const classes = styles();\n    const [username, setUsername] = useState(\"\");\n    const [password , setPassword] = useState(\"\");\n    const [role , setRole] = useState(\"\");\n    const [open, setOpen] = React.useState(false);\n\n  const handleChange = (event) => {\n    setRole(event.target.value);\n  };\n\n  const handleClose = () => {\n    setOpen(false);\n  };\n\n  const handleOpen = () => {\n    setOpen(true);\n  };\n    return (\n        <React.Fragment>\n                <div className={classes.paper}>\n                    <TextField\n                            name=\"Username\"\n                            label=\"Username\"\n                            // value={username}\n                            variant=\"filled\" \n                            className={classes.items}\n                        />\n                        <TextField\n                            // type=\"password\"\n                            name=\"password\"\n                            label=\"Password\"\n                            // value={password}\n                            variant=\"filled\"\n                            className={classes.items}\n                        />\n                         <FormControl className={classes.formControl}>\n                        <InputLabel id=\"demo-controlled-open-select-label\">Roles</InputLabel>\n                        <Select\n                        labelId=\"demo-controlled-open-select-label\"\n                        id=\"demo-controlled-open-select\"\n                        open={open}\n                        onClose={handleClose}\n                        onOpen={handleOpen}\n                        value={role}\n                        onChange={handleChange}\n                        className={classes.items}\n                        >\n                        <MenuItem value=\"staff\">Staff</MenuItem>\n                        <MenuItem value=\"inventory_manager\">Inventory Manager</MenuItem>\n                        <MenuItem value=\"accountant\">Accountant</MenuItem>\n                        </Select>\n                    </FormControl>\n\n                        <Button\n                            className={classes.button}\n                            variant=\"contained\"\n                            color=\"primary\"\n                            className={classes.items}\n                        >\n                            Register\n                        </Button>\n                    </div>\n                    <div className={classes.table}>\n        <TableContainer className={classes.tables}>\n        <Table stickyHeader aria-label=\"sticky table\">\n        <TableHead>\n          <TableRow>\n            <TableCell>UserName</TableCell>\n            <TableCell>Password</TableCell>\n            <TableCell>Roles</TableCell>\n          </TableRow>\n        </TableHead>\n        <TableBody>\n            <TableRow>\n                <TableCell>Ramesh</TableCell>\n                <TableCell>1234</TableCell>\n                <TableCell>Inventory Manager</TableCell>\n                <Button\n                            className={classes.button}\n                            variant=\"contained\"\n                            color=\"primary\"\n                        >\n                            Edit\n                        </Button>\n                        <Button\n                            className={classes.button}\n                            variant=\"contained\"\n                            color=\"secondary\"\n                        >\n                            Delete\n                        </Button>\n            </TableRow>\n            <TableRow>\n                <TableCell>Ramesh</TableCell>\n                <TableCell>1234</TableCell>\n                <TableCell>Inventory Manager</TableCell>\n                <Button\n                            className={classes.button}\n                            variant=\"contained\"\n                            color=\"primary\"\n                        >\n                            Edit\n                        </Button>\n                        <Button\n                            className={classes.button}\n                            variant=\"contained\"\n                            color=\"secondary\"\n                        >\n                            Delete\n                        </Button>\n            </TableRow>\n            <TableRow>\n                <TableCell>Ramesh</TableCell>\n                <TableCell>1234</TableCell>\n                <TableCell>Inventory Manager</TableCell>\n                <Button\n                            className={classes.button}\n                            variant=\"contained\"\n                            color=\"primary\"\n                        >\n                            Edit\n                        </Button>\n                        <Button\n                            className={classes.button}\n                            variant=\"contained\"\n                            color=\"secondary\"\n                        >\n                            Delete\n                        </Button>\n            </TableRow>\n        </TableBody>\n        </Table>\n        </TableContainer>\n        </div>\n        </React.Fragment>\n    )\n}\n\nexport default Register;","/home/sherlock/Workdev/lims-frontend/src/Components/appBar.js",[],"/home/sherlock/Workdev/lims-frontend/src/Components/login.js",["132"],"import React, { useState } from \"react\";\nimport {\n  TextField,\n  Paper,\n  makeStyles,\n  Typography,\n  Button,\n  FormControl,\n} from \"@material-ui/core\";\nimport Snackbar from \"@material-ui/core/Snackbar\";\nimport MuiAlert from \"@material-ui/lab/Alert\";\n\nimport axios from \"../api\";\nimport jwt_decode from \"jwt-decode\";\n\nimport { useDispatch } from \"react-redux\";\nimport { setUser } from \"../action/setUser\";\nimport { Redirect } from \"react-router\";\nconst styles = makeStyles({\n  paper: {\n    display: \"flex\",\n    justifyContent: \"center\",\n    alignItems: \"center\",\n    flexDirection: \"column\",\n    height: \"100%\",\n    width: \"100%\",\n    margin: \"0\",\n    padding: \"0\",\n    backgroundColor: \"#f7f7f7\",\n  },\n  input: {\n    display: \"flex\",\n    flexDirection: \"column\",\n  },\n  button: {\n    marginTop: \"2rem\",\n  },\n});\nfunction Alert(props) {\n  return <MuiAlert elevation={6} variant=\"filled\" {...props} />;\n}\n\nconst Login = ({ isLogin, setLogin }) => {\n  const dispatch = useDispatch();\n  const classes = styles();\n  const [username, setUsername] = useState(\"\");\n  const [password, setPassword] = useState(\"\");\n\n  // //SnackBar operations\n  const [messege, setMessege] = useState(\"\");\n  const [open, setOpen] = useState(false);\n  const handleOpen = () => {\n    setOpen(true);\n  };\n\n  const handleClose = (reason) => {\n    if (reason === \"clickaway\") {\n      return;\n    }\n    setOpen(false);\n  };\n\n  const handleSubmit = async () => {\n    try {\n      const { data } = await axios.post(\"/login\", {\n        userName: username,\n        password,\n      });\n      const { id, role } = jwt_decode(data.token);\n      localStorage.setItem(\"token\", data.token);\n      dispatch(setUser(id, role));\n      setLogin(true);\n    } catch (e) {\n      console.log(e);\n      setMessege(e.response.data);\n      handleOpen();\n      setUsername(\"\");\n      setPassword(\"\");\n    }\n  };\n\n  return (\n    <React.Fragment>\n      <Paper style={{ height: \"100vh\" }}>\n        <div className={classes.paper}>\n          <Typography\n            variant=\"h4\"\n            style={{ fontWeight: \"bold\", marginBottom: \"20px\" }}\n          >\n            Laboratory Management System\n          </Typography>\n          <FormControl>\n            <div className={classes.input}>\n              <TextField\n                name=\"Username\"\n                required\n                label=\"Username\"\n                value={username}\n                variant=\"filled\"\n                onChange={(e) => setUsername(e.target.value)}\n              />\n              <TextField\n                required\n                type=\"password\"\n                name=\"password\"\n                label=\"Password\"\n                value={password}\n                variant=\"filled\"\n                onChange={(e) => setPassword(e.target.value)}\n              />\n              <Button\n                className={classes.button}\n                variant=\"contained\"\n                color=\"primary\"\n                onClick={handleSubmit}\n              >\n                LOGIN\n              </Button>\n            </div>\n          </FormControl>\n        </div>\n      </Paper>\n      <Snackbar open={open} autoHideDuration={6000} onClose={handleClose}>\n        <Alert onClose={handleClose} severity=\"error\">\n          {messege}\n        </Alert>\n      </Snackbar>\n    </React.Fragment>\n  );\n};\n\nexport default Login;\n","/home/sherlock/Workdev/lims-frontend/src/action/setUser.js",[],"/home/sherlock/Workdev/lims-frontend/src/api/index.js",[],"/home/sherlock/Workdev/lims-frontend/src/validation/validator.js",["133","134"],"import React from \"react\";\nimport joi from \"@hapi/joi\";\n\nconst addCustomerValidaiton = (data) => {\n  const schema = joi.object({\n      firstName: joi.string().min(4).required(),\n      lastName: joi.string().min(4).required(),\n      age: joi.number().integer().min(1).max(110).required(),\n      address: joi.string().min(3).required(),\n      gender: joi.string().required(),\n      contactNumber:joi.number().integer().required(),\n\n  });\n  return schema.validate(data);\n}\n\n\nconst addSampleValidaiton = (data) => {\n  const schema = joi.object({\n      cutomerName: joi.string().min(4).required(),\n      dueDate: joi.date().min(4).required(),\n      collectedBy: joi.string.min(4).required(),\n      payment: joi.number().integer.required(),\n      testName: joi.string().min(3).required(),\n  });\n  return schema.validate(data);\n}\n\n// export default {\n//   addCustomerValidaiton,\n//   addSampleValidaiton\n// };\n\nexport default addCustomerValidaiton;",["135","136"],"/home/sherlock/Workdev/lims-frontend/src/Components/AddSample.js",["137","138","139"],"import React, { useState } from \"react\";\nimport {\n    TextField,\n    Paper,\n    makeStyles,\n    Button,\n   Select,\n   MenuItem,\n   InputLabel,\n   FormControl,\n   TableContainer,\n   Table,\n   TableHead,\n   TableRow,\n   TableCell,\n   TableBody\n} from \"@material-ui/core\";\nconst styles = makeStyles(theme => ({\n    paper: {\n        display: \"flex\",\n        marginBottom: theme.spacing(2),\n        padding: \"1em 2em 2em 2em\",\n        margin: \"6em 2em 2em 2em\"\n    },\n    item:{\n        width:\"15em\"\n    },\n    papers:{\n    display:\"flex\",\n    marginBottom: theme.spacing(3),\n    marginRight: theme.spacing(5)\n    },\n    items: {\n        marginLeft: theme.spacing(8),\n        flex : \"1 auto\",\n    },\n    buttons: {\n        marginTop: theme.spacing(3),\n        marginLeft: theme.spacing(120)\n    },\n    button:{\n        margin:\"5px 3px 5px 5px\"\n    },\n    tables: {\n        height: \"380px\",\n      },\n      table: {\n        marginTop:\"7%\",\n        marginLeft: \"3%\",\n      },\n}));\n\n\nconst AddSample = () => {\n    const classes = styles();\n    const [addSample , setAddSample] = React.useState({\n        customerName:\"\",\n        sampleNo:\"\",\n        dueDate:new Date(),\n        collectedBy:\"\",\n        payment:undefined,\n        testName:\"\",\n    })\n\n    const handleChange = (input) => event => {\n        setAddSample({ ...addSample, [input]: event.target.value });\n    };\n\n    return (\n        <React.Fragment>\n            <div className={classes.paper}>\n            <FormControl className={classes.formControl}>\n                        <InputLabel id=\"demo-controlled-open-select-label\">Customer Name</InputLabel>\n                        <Select\n                        labelId=\"demo-controlled-open-select-label\"\n                        id=\"demo-controlled-open-select\"\n                        // value={role}\n                        onChange={handleChange(\"customerName\")}\n                        className={classes.item}\n                        >\n                        <MenuItem value=\"staff\">Ramesh</MenuItem>\n                        <MenuItem value=\"inventory_manager\">Rajesh</MenuItem>\n                        <MenuItem value=\"accountant\">Rojesh</MenuItem>\n                        </Select>\n                    </FormControl>\n            </div>\n                <div className={classes.papers}>\n                    <TextField\n                            name=\"sample_no\"\n                            label=\"Sample NO\"\n                            value={addSample.sampleNo}\n                            variant=\"filled\" \n                            className={classes.items}\n                            onChange={handleChange(\"sampleNo\")}\n                            type=\"string\"\n                        />\n                        <TextField\n                            name=\"Due_Date\"\n                            value={addSample.dueDate}\n                            variant=\"filled\"\n                            className={classes.items}\n                            type=\"date\"\n                            onChange={handleChange(\"dueDate\")}\n                        />\n                            <TextField\n                            name=\"Collected_By\"\n                            label=\"Collected By\"\n                            value={addSample.collectedBy}\n                            variant=\"filled\"\n                            className={classes.items}\n                            type=\"string\"\n                            onChange={handleChange(\"collectedBy\")}\n                        />\n                        </div>\n                         <div className={classes.papers}>\n                         <TextField\n                            name=\"payment\"\n                            label=\"Payment\"\n                            value={addSample.payment}\n                            variant=\"filled\"\n                            className={classes.items}\n                            type=\"number\"\n                            onChange={handleChange(\"payment\")}\n                        />\n                           <TextField\n                            name=\"test_name\"\n                            label=\"Test Name\"\n                            value={addSample.testName}\n                            variant=\"filled\"\n                            className={classes.items}\n                            type=\"string\"\n                            onChange={handleChange(\"testName\")}\n                        />\n\n                        <Button\n                            className={classes.button}\n                            variant=\"contained\"\n                            color=\"primary\"\n                            className={classes.items}\n                        >\n                            Add\n                        </Button>\n                    </div>\n                    <div className={classes.table}>\n        <TableContainer className={classes.tables}>\n        <Table stickyHeader aria-label=\"sticky table\">\n        <TableHead>\n          <TableRow>\n            <TableCell>Sample No</TableCell>\n            <TableCell>Due Date</TableCell>\n            <TableCell>Collected By</TableCell>\n            <TableCell>Payment</TableCell>\n            <TableCell>Test Name</TableCell>\n          </TableRow>\n        </TableHead>\n        <TableBody>\n            <TableRow>\n                <TableCell>A12B31</TableCell>\n                <TableCell>2021/04/24</TableCell>\n                <TableCell>Ramesh Parajuli</TableCell>\n                <TableCell>700</TableCell>\n                <TableCell>Blood Test</TableCell>\n                <Button\n                            className={classes.button}\n                            variant=\"contained\"\n                            color=\"primary\"\n                        >\n                            Edit\n                        </Button>\n                        <Button\n                            className={classes.button}\n                            variant=\"contained\"\n                            color=\"secondary\"\n                        >\n                            Delete\n                        </Button>\n            </TableRow>\n            <TableRow>\n            <TableCell>A12B31</TableCell>\n                <TableCell>2021/04/24</TableCell>\n                <TableCell>Ramesh Parajuli</TableCell>\n                <TableCell>700</TableCell>\n                <TableCell>Blood Test</TableCell>\n                <Button\n                            className={classes.button}\n                            variant=\"contained\"\n                            color=\"primary\"\n                        >\n                            Edit\n                        </Button>\n                        <Button\n                            className={classes.button}\n                            variant=\"contained\"\n                            color=\"secondary\"\n                        >\n                            Delete\n                        </Button>\n            </TableRow>\n            <TableRow>\n            <TableCell>A12B31</TableCell>\n                <TableCell>2021/04/24</TableCell>\n                <TableCell>Ramesh Parajuli</TableCell>\n                <TableCell>700</TableCell>\n                <TableCell>Blood Test</TableCell>\n                <Button\n                            className={classes.button}\n                            variant=\"contained\"\n                            color=\"primary\"\n                        >\n                            Edit\n                        </Button>\n                        <Button\n                            className={classes.button}\n                            variant=\"contained\"\n                            color=\"secondary\"\n                        >\n                            Delete\n                        </Button>\n            </TableRow>\n        </TableBody>\n        </Table>\n        </TableContainer>\n        </div>\n        </React.Fragment>\n    )\n}\n\nexport default AddSample;","/home/sherlock/Workdev/lims-frontend/src/Components/SnackBar.js",[],{"ruleId":"140","replacedBy":"141"},{"ruleId":"142","replacedBy":"143"},{"ruleId":"144","severity":1,"message":"145","line":12,"column":3,"nodeType":"146","messageId":"147","endLine":12,"endColumn":11},{"ruleId":"144","severity":1,"message":"148","line":22,"column":10,"nodeType":"146","messageId":"147","endLine":22,"endColumn":18},{"ruleId":"144","severity":1,"message":"149","line":1,"column":17,"nodeType":"146","messageId":"147","endLine":1,"endColumn":25},{"ruleId":"150","severity":1,"message":"151","line":46,"column":29,"nodeType":"152","endLine":46,"endColumn":47},{"ruleId":"150","severity":1,"message":"151","line":65,"column":29,"nodeType":"152","endLine":65,"endColumn":47},{"ruleId":"150","severity":1,"message":"151","line":84,"column":29,"nodeType":"152","endLine":84,"endColumn":47},{"ruleId":"150","severity":1,"message":"151","line":103,"column":29,"nodeType":"152","endLine":103,"endColumn":47},{"ruleId":"150","severity":1,"message":"151","line":122,"column":29,"nodeType":"152","endLine":122,"endColumn":47},{"ruleId":"144","severity":1,"message":"153","line":5,"column":5,"nodeType":"146","messageId":"147","endLine":5,"endColumn":11},{"ruleId":"144","severity":1,"message":"154","line":6,"column":5,"nodeType":"146","messageId":"147","endLine":6,"endColumn":15},{"ruleId":"144","severity":1,"message":"155","line":8,"column":5,"nodeType":"146","messageId":"147","endLine":8,"endColumn":16},{"ruleId":"144","severity":1,"message":"156","line":10,"column":5,"nodeType":"146","messageId":"147","endLine":10,"endColumn":13},{"ruleId":"144","severity":1,"message":"157","line":11,"column":5,"nodeType":"146","messageId":"147","endLine":11,"endColumn":10},{"ruleId":"144","severity":1,"message":"158","line":12,"column":5,"nodeType":"146","messageId":"147","endLine":12,"endColumn":21},{"ruleId":"144","severity":1,"message":"159","line":41,"column":12,"nodeType":"146","messageId":"147","endLine":41,"endColumn":19},{"ruleId":"144","severity":1,"message":"160","line":41,"column":20,"nodeType":"146","messageId":"147","endLine":41,"endColumn":30},{"ruleId":"144","severity":1,"message":"161","line":45,"column":12,"nodeType":"146","messageId":"147","endLine":45,"endColumn":22},{"ruleId":"144","severity":1,"message":"162","line":45,"column":23,"nodeType":"146","messageId":"147","endLine":45,"endColumn":36},{"ruleId":"144","severity":1,"message":"157","line":11,"column":5,"nodeType":"146","messageId":"147","endLine":11,"endColumn":10},{"ruleId":"144","severity":1,"message":"158","line":12,"column":5,"nodeType":"146","messageId":"147","endLine":12,"endColumn":21},{"ruleId":"144","severity":1,"message":"163","line":52,"column":20,"nodeType":"146","messageId":"147","endLine":52,"endColumn":28},{"ruleId":"144","severity":1,"message":"149","line":1,"column":17,"nodeType":"146","messageId":"147","endLine":1,"endColumn":25},{"ruleId":"144","severity":1,"message":"164","line":15,"column":12,"nodeType":"146","messageId":"147","endLine":15,"endColumn":19},{"ruleId":"144","severity":1,"message":"165","line":15,"column":22,"nodeType":"146","messageId":"147","endLine":15,"endColumn":32},{"ruleId":"150","severity":1,"message":"151","line":29,"column":11,"nodeType":"152","endLine":29,"endColumn":37},{"ruleId":"144","severity":1,"message":"149","line":1,"column":17,"nodeType":"146","messageId":"147","endLine":1,"endColumn":25},{"ruleId":"144","severity":1,"message":"166","line":42,"column":12,"nodeType":"146","messageId":"147","endLine":42,"endColumn":25},{"ruleId":"144","severity":1,"message":"167","line":42,"column":26,"nodeType":"146","messageId":"147","endLine":42,"endColumn":42},{"ruleId":"144","severity":1,"message":"149","line":1,"column":17,"nodeType":"146","messageId":"147","endLine":1,"endColumn":25},{"ruleId":"144","severity":1,"message":"149","line":1,"column":17,"nodeType":"146","messageId":"147","endLine":1,"endColumn":25},{"ruleId":"144","severity":1,"message":"168","line":42,"column":12,"nodeType":"146","messageId":"147","endLine":42,"endColumn":24},{"ruleId":"144","severity":1,"message":"169","line":42,"column":25,"nodeType":"146","messageId":"147","endLine":42,"endColumn":40},{"ruleId":"144","severity":1,"message":"170","line":4,"column":5,"nodeType":"146","messageId":"147","endLine":4,"endColumn":10},{"ruleId":"144","severity":1,"message":"171","line":45,"column":12,"nodeType":"146","messageId":"147","endLine":45,"endColumn":20},{"ruleId":"144","severity":1,"message":"172","line":45,"column":22,"nodeType":"146","messageId":"147","endLine":45,"endColumn":33},{"ruleId":"144","severity":1,"message":"173","line":46,"column":12,"nodeType":"146","messageId":"147","endLine":46,"endColumn":20},{"ruleId":"144","severity":1,"message":"174","line":46,"column":23,"nodeType":"146","messageId":"147","endLine":46,"endColumn":34},{"ruleId":"150","severity":1,"message":"151","line":101,"column":29,"nodeType":"152","endLine":101,"endColumn":54},{"ruleId":"144","severity":1,"message":"145","line":18,"column":10,"nodeType":"146","messageId":"147","endLine":18,"endColumn":18},{"ruleId":"144","severity":1,"message":"175","line":1,"column":8,"nodeType":"146","messageId":"147","endLine":1,"endColumn":13},{"ruleId":"144","severity":1,"message":"176","line":18,"column":7,"nodeType":"146","messageId":"147","endLine":18,"endColumn":26},{"ruleId":"140","replacedBy":"177"},{"ruleId":"142","replacedBy":"178"},{"ruleId":"144","severity":1,"message":"149","line":1,"column":17,"nodeType":"146","messageId":"147","endLine":1,"endColumn":25},{"ruleId":"144","severity":1,"message":"170","line":4,"column":5,"nodeType":"146","messageId":"147","endLine":4,"endColumn":10},{"ruleId":"150","severity":1,"message":"151","line":139,"column":29,"nodeType":"152","endLine":139,"endColumn":54},"no-native-reassign",["179"],"no-negated-in-lhs",["180"],"no-unused-vars","'Redirect' is defined but never used.","Identifier","unusedVar","'setToken' is defined but never used.","'useState' is defined but never used.","react/jsx-no-duplicate-props","No duplicate props allowed","JSXAttribute","'Select' is defined but never used.","'InputLabel' is defined but never used.","'FormControl' is defined but never used.","'MenuItem' is defined but never used.","'theme' is defined but never used.","'CircularProgress' is defined but never used.","'addTest' is assigned a value but never used.","'setAddTest' is assigned a value but never used.","'parameters' is assigned a value but never used.","'setParameters' is assigned a value but never used.","'setReset' is assigned a value but never used.","'reagent' is assigned a value but never used.","'setReagent' is assigned a value but never used.","'importReagent' is assigned a value but never used.","'setImportReagent' is assigned a value but never used.","'sampleFields' is assigned a value but never used.","'setSampleFields' is assigned a value but never used.","'Paper' is defined but never used.","'username' is assigned a value but never used.","'setUsername' is assigned a value but never used.","'password' is assigned a value but never used.","'setPassword' is assigned a value but never used.","'React' is defined but never used.","'addSampleValidaiton' is assigned a value but never used.",["179"],["180"],"no-global-assign","no-unsafe-negation"]