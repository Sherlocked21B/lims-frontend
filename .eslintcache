[{"D:\\proj\\lims-frontend\\src\\index.js":"1","D:\\proj\\lims-frontend\\src\\App.js":"2","D:\\proj\\lims-frontend\\src\\reducers\\index.js":"3","D:\\proj\\lims-frontend\\src\\Components\\AddReagent.js":"4","D:\\proj\\lims-frontend\\src\\Components\\PendingSample.js":"5","D:\\proj\\lims-frontend\\src\\Components\\AllSample.js":"6","D:\\proj\\lims-frontend\\src\\Components\\AllReagent.js":"7","D:\\proj\\lims-frontend\\src\\Components\\appBar.js":"8","D:\\proj\\lims-frontend\\src\\action\\setUser.js":"9","D:\\proj\\lims-frontend\\src\\Components\\register.js":"10","D:\\proj\\lims-frontend\\src\\Components\\ImportReagent.js":"11","D:\\proj\\lims-frontend\\src\\reducers\\authReducer.js":"12","D:\\proj\\lims-frontend\\src\\Components\\AddTest.js":"13","D:\\proj\\lims-frontend\\src\\Components\\login.js":"14","D:\\proj\\lims-frontend\\src\\Components\\AddSample.js":"15","D:\\proj\\lims-frontend\\src\\Components\\AddCutomer.js":"16","D:\\proj\\lims-frontend\\src\\Components\\SnackBar.js":"17","D:\\proj\\lims-frontend\\src\\validation\\validator.js":"18","D:\\proj\\lims-frontend\\src\\api\\index.js":"19"},{"size":585,"mtime":1615879392673,"results":"20","hashOfConfig":"21"},{"size":2059,"mtime":1615881824029,"results":"22","hashOfConfig":"21"},{"size":175,"mtime":1615879392675,"results":"23","hashOfConfig":"21"},{"size":2832,"mtime":1615879392636,"results":"24","hashOfConfig":"21"},{"size":5142,"mtime":1615879392663,"results":"25","hashOfConfig":"21"},{"size":6760,"mtime":1615879392659,"results":"26","hashOfConfig":"21"},{"size":1448,"mtime":1615879392640,"results":"27","hashOfConfig":"21"},{"size":5385,"mtime":1615879392664,"results":"28","hashOfConfig":"21"},{"size":106,"mtime":1615879392669,"results":"29","hashOfConfig":"21"},{"size":6052,"mtime":1615879392667,"results":"30","hashOfConfig":"21"},{"size":3209,"mtime":1615879392662,"results":"31","hashOfConfig":"21"},{"size":188,"mtime":1615879392674,"results":"32","hashOfConfig":"21"},{"size":3211,"mtime":1615879392639,"results":"33","hashOfConfig":"21"},{"size":3574,"mtime":1615882075438,"results":"34","hashOfConfig":"21"},{"size":10752,"mtime":1616123621663,"results":"35","hashOfConfig":"21"},{"size":6358,"mtime":1615967733725,"results":"36","hashOfConfig":"21"},{"size":563,"mtime":1615964935018,"results":"37","hashOfConfig":"21"},{"size":953,"mtime":1616051588275,"results":"38","hashOfConfig":"21"},{"size":187,"mtime":1615964988270,"results":"39","hashOfConfig":"21"},{"filePath":"40","messages":"41","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"42"},"1t17olv",{"filePath":"43","messages":"44","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"45","usedDeprecatedRules":"42"},{"filePath":"46","messages":"47","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"42"},{"filePath":"48","messages":"49","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"50","usedDeprecatedRules":"42"},{"filePath":"51","messages":"52","errorCount":0,"warningCount":6,"fixableErrorCount":0,"fixableWarningCount":0,"source":"53","usedDeprecatedRules":"42"},{"filePath":"54","messages":"55","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"56","usedDeprecatedRules":"42"},{"filePath":"57","messages":"58","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"59","usedDeprecatedRules":"42"},{"filePath":"60","messages":"61","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"42"},{"filePath":"62","messages":"63","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"42"},{"filePath":"64","messages":"65","errorCount":0,"warningCount":6,"fixableErrorCount":0,"fixableWarningCount":0,"source":"66","usedDeprecatedRules":"42"},{"filePath":"67","messages":"68","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"69","usedDeprecatedRules":"42"},{"filePath":"70","messages":"71","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"42"},{"filePath":"72","messages":"73","errorCount":0,"warningCount":10,"fixableErrorCount":0,"fixableWarningCount":0,"source":"74","usedDeprecatedRules":"42"},{"filePath":"75","messages":"76","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"77","usedDeprecatedRules":"42"},{"filePath":"78","messages":"79","errorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"80","messages":"81","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"82","usedDeprecatedRules":"42"},{"filePath":"83","messages":"84","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"42"},{"filePath":"85","messages":"86","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"87","usedDeprecatedRules":"42"},{"filePath":"88","messages":"89","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"42"},"D:\\proj\\lims-frontend\\src\\index.js",[],["90","91"],"D:\\proj\\lims-frontend\\src\\App.js",["92"],"import AppBar from \"./Components/appBar\";\r\nimport AddCustomer from \"./Components/AddCutomer\";\r\nimport AddReagent from \"./Components/AddReagent\";\r\nimport AddTest from \"./Components/AddTest\";\r\nimport ImportReagent from \"./Components/ImportReagent\";\r\nimport PendingSample from \"./Components/PendingSample\";\r\nimport AllSample from \"./Components/AllSample\";\r\nimport AllReagent from \"./Components/AllReagent\";\r\nimport AddSample from \"./Components/AddSample\";\r\nimport {\r\n  BrowserRouter as Router,\r\n  Redirect,\r\n  Route,\r\n  Switch,\r\n} from \"react-router-dom\";\r\nimport jwt_decode from \"jwt-decode\";\r\nimport { useDispatch } from \"react-redux\";\r\nimport { useState } from \"react\";\r\nimport Login from \"./Components/login\";\r\nimport Register from \"./Components/register\";\r\nimport { setUser } from \"./action/setUser\";\r\n\r\nfunction App() {\r\n  const dispatch = useDispatch();\r\n  const token = localStorage.getItem(\"token\");\r\n  const [isLogin, setLogin] = useState(token ? true : false);\r\n  if (token) {\r\n    try {\r\n      const decoded = jwt_decode(token);\r\n      dispatch(setUser(decoded.id, decoded.role));\r\n    } catch (e) {\r\n      localStorage.removeItem(\"token\");\r\n      setLogin(false);\r\n    }\r\n  }\r\n\r\n  return isLogin ? (\r\n    <Router>\r\n      <div className=\"App\">\r\n        <AppBar />\r\n        <Switch>\r\n          <Route path=\"/\" exact component={PendingSample} />\r\n          <Route path=\"/addCustomer\" component={AddCustomer} />\r\n          <Route path=\"/addReagent\" component={AddReagent} />\r\n          <Route path=\"/addTest\" component={AddTest} />\r\n          <Route path=\"/importReagent\" component={ImportReagent} />\r\n          <Route path=\"/allSample\" component={AllSample} />\r\n          <Route path=\"/allReagent\" component={AllReagent} />\r\n          <Route path=\"/addSample\" component={AddSample} />\r\n          <Route path=\"/register\" exact component={Register} />\r\n          <Route path=\"/login\" exact component={Login} />\r\n        </Switch>\r\n      </div>\r\n    </Router>\r\n  ) : (\r\n    <Login isLogin={isLogin} setLogin={setLogin} />\r\n  );\r\n}\r\n\r\nexport default App;\r\n","D:\\proj\\lims-frontend\\src\\reducers\\index.js",[],"D:\\proj\\lims-frontend\\src\\Components\\AddReagent.js",["93","94","95","96"],"import React, { useState} from \"react\";\r\nimport {\r\n  TextField,\r\n  Button,\r\n  CssBaseline,\r\n  TableContainer,\r\n  Table,\r\n  TableHead,\r\n  TableRow,\r\n  TableCell,\r\n  TableBody\r\n} from \"@material-ui/core\";\r\n\r\nconst AddReagent=()=>{\r\n    const [reagent , setReagent] = React.useState({\r\n        reagentName:\"\",\r\n        unit:\"\",\r\n        voulme:\"\"\r\n    })\r\n    return(\r\n     <CssBaseline>\r\n      <div style={Styles.inputfiled}>\r\n        <TextField\r\n          style={Styles.inputfileds}\r\n          id=\"reagentName\"\r\n          label=\"Name Of Reagent\"\r\n          type=\"string\"\r\n          variant=\"outlined\"\r\n          style={Styles.inputfileds}\r\n        //   value={reagent.reagentName}\r\n        />\r\n        <TextField\r\n          style={Styles.inputfileds}\r\n          label=\"Unit Of Reagent\"\r\n          variant=\"outlined\"\r\n        //   value={reagent.unit}\r\n        />\r\n        <TextField\r\n          style={Styles.inputfileds}\r\n          label=\"Volume\"\r\n          variant=\"outlined\"\r\n          type=\"number\"\r\n        //   value={reagent.voulme}\r\n        />\r\n\r\n        <Button\r\n          variant=\"contained\"\r\n          color=\"primary\"\r\n          onClick={()=>{}}\r\n          style={Styles.button}\r\n        >\r\n          Add\r\n        </Button>\r\n        </div>\r\n        <div style={Styles.table}>\r\n        <TableContainer style={Styles.tables}>\r\n        <Table stickyHeader aria-label=\"sticky table\">\r\n        <TableHead>\r\n          <TableRow>\r\n            <TableCell>Reagent Name</TableCell>\r\n            <TableCell>Unit</TableCell>\r\n          </TableRow>\r\n        </TableHead>\r\n        <TableBody>\r\n            <TableRow>\r\n                <TableCell>Hcl</TableCell>\r\n                <TableCell>ml</TableCell>\r\n\r\n        <Button\r\n          variant=\"contained\"\r\n          color=\"secondary\"\r\n          onClick={()=>{}}\r\n          style={Styles.button}\r\n        >\r\n            Delete\r\n            </Button>\r\n            </TableRow>\r\n            <TableRow>\r\n                <TableCell>Hcl</TableCell>\r\n                <TableCell>ml</TableCell>\r\n\r\n        <Button\r\n          variant=\"contained\"\r\n          color=\"secondary\"\r\n          onClick={()=>{}}\r\n          style={Styles.button}\r\n        >\r\n            Delete\r\n            </Button>\r\n            </TableRow>\r\n        </TableBody>\r\n        </Table>\r\n        </TableContainer>\r\n        </div>\r\n    </CssBaseline>\r\n    )\r\n}\r\n\r\nconst Styles = {\r\n    inputfiled: {\r\n      marginTop: \"6%\",\r\n      marginLeft: \"5%\",\r\n      marginBottom: \"2%\",\r\n      display: \"flex\",\r\n    },\r\n    inputfileds: {\r\n      marginTop: \"3%\",\r\n      marginLeft: \"3%\",\r\n      marginBottom: \"2%\",\r\n    },\r\n    button: {\r\n      marginTop: \"3%\",\r\n      marginLeft: \"5%\",\r\n      height: 50,\r\n    },\r\n    tables: {\r\n      height: \"380px\",\r\n    },\r\n    table: {\r\n      marginLeft: \"3%\",\r\n    },\r\n  };\r\n\r\nexport default AddReagent;","D:\\proj\\lims-frontend\\src\\Components\\PendingSample.js",["97","98","99","100","101","102"],"import React, { useState} from \"react\";\r\nimport {\r\n  TableContainer,\r\n  Table,\r\n  TableHead,\r\n  TableRow,\r\n  TableCell,\r\n  TableBody,\r\n  Button\r\n} from \"@material-ui/core\";\r\nimport { Style } from \"@material-ui/icons\";\r\n\r\n\r\nconst PendingSample = () => {\r\n    \r\n    return (\r\n        <div>\r\n             <div style={Styles.table}>\r\n        <TableContainer style={Styles.tables}>\r\n        <Table stickyHeader aria-label=\"sticky table\">\r\n        <TableHead>\r\n          <TableRow>\r\n            <TableCell>Sample Id</TableCell>\r\n            <TableCell>Test</TableCell>\r\n            <TableCell>Customer Name</TableCell>\r\n            <TableCell>Due Date</TableCell>\r\n            <TableCell>Payment</TableCell>\r\n            <TableCell>Collected By</TableCell>\r\n            <TableCell>Status</TableCell>\r\n          </TableRow>\r\n        </TableHead>\r\n        <TableBody>\r\n            <TableRow>\r\n                <TableCell>101</TableCell>\r\n                <TableCell>Urine Test</TableCell>\r\n                <TableCell>Rajesh</TableCell>\r\n                <TableCell>2020/01/20</TableCell>\r\n                <TableCell>1500</TableCell>\r\n                <TableCell>Ravish</TableCell>\r\n                <TableCell style={Style.text}>Pending</TableCell>\r\n                <TableCell>\r\n                <Button\r\n                         style={Styles.button}\r\n                            variant=\"contained\"\r\n                            color=\"primary\"\r\n                            color=\"black-text\"\r\n                        >\r\n                           Generate Report\r\n                        </Button>\r\n                </TableCell>\r\n            </TableRow>\r\n            <TableRow>\r\n                <TableCell>101</TableCell>\r\n                <TableCell>Urine Test</TableCell>\r\n                <TableCell>Rajesh</TableCell>\r\n                <TableCell>2020/01/20</TableCell>\r\n                <TableCell>1500</TableCell>\r\n                <TableCell>Ravish</TableCell>\r\n                <TableCell style={Style.text}>Pending</TableCell>\r\n                <TableCell>\r\n                <Button\r\n                         style={Styles.button}\r\n                            variant=\"contained\"\r\n                            color=\"primary\"\r\n                            color=\"black-text\"\r\n                        >\r\n                           Generate Report\r\n                        </Button>\r\n                </TableCell>\r\n            </TableRow>\r\n            <TableRow>\r\n                <TableCell>101</TableCell>\r\n                <TableCell>Urine Test</TableCell>\r\n                <TableCell>Rajesh</TableCell>\r\n                <TableCell>2020/01/20</TableCell>\r\n                <TableCell>1500</TableCell>\r\n                <TableCell>Ravish</TableCell>\r\n                <TableCell color=\"secondary\">Pending</TableCell>\r\n                <TableCell>\r\n                <Button\r\n                         style={Styles.button}\r\n                            variant=\"contained\"\r\n                            color=\"primary\"\r\n                            color=\"black-text\"\r\n                        >\r\n                           Generate Report\r\n                        </Button>\r\n                </TableCell>\r\n            </TableRow>\r\n            <TableRow>\r\n                <TableCell>101</TableCell>\r\n                <TableCell>Urine Test</TableCell>\r\n                <TableCell>Rajesh</TableCell>\r\n                <TableCell>2020/01/20</TableCell>\r\n                <TableCell>1500</TableCell>\r\n                <TableCell>Ravish</TableCell>\r\n                <TableCell color=\"secondary\">Pending</TableCell>\r\n                <TableCell>\r\n                <Button\r\n                         style={Styles.button}\r\n                            variant=\"contained\"\r\n                            color=\"primary\"\r\n                            color=\"black-text\"\r\n                        >\r\n                           Generate Report\r\n                        </Button>\r\n                </TableCell>\r\n            </TableRow>\r\n            <TableRow>\r\n                <TableCell>101</TableCell>\r\n                <TableCell>Urine Test</TableCell>\r\n                <TableCell>Rajesh</TableCell>\r\n                <TableCell>2020/01/20</TableCell>\r\n                <TableCell>1500</TableCell>\r\n                <TableCell>Ravish</TableCell>\r\n                <TableCell>Pending</TableCell>\r\n                <TableCell>\r\n                <Button\r\n                         style={Styles.button}\r\n                            variant=\"contained\"\r\n                            color=\"primary\"\r\n                            color=\"black-text\"\r\n                        >\r\n                           Generate Report\r\n                        </Button>\r\n                </TableCell>\r\n            </TableRow>\r\n        </TableBody>\r\n        </Table>\r\n        </TableContainer>\r\n        </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nconst Styles = {\r\n    tables: {\r\n        height: \"380px\",\r\n      },\r\n      table: {\r\n        marginTop:\"7%\",\r\n        marginLeft: \"3%\",\r\n      },\r\n      button: {\r\n        marginTop: \"1rem\",\r\n        backgroundColor:\"#27E208\",\r\n        \r\n    },\r\n  \r\n}\r\n\r\n\r\nexport default PendingSample;","D:\\proj\\lims-frontend\\src\\Components\\AllSample.js",["103","104","105"],"import React, { useState} from \"react\";\r\nimport {\r\n    TextField,\r\n    makeStyles,\r\n    Button,\r\n   TableContainer,\r\n   Table,\r\n   TableHead,\r\n   TableRow,\r\n   TableCell,\r\n   TableBody\r\n} from \"@material-ui/core\";\r\nimport SearchIcon from '@material-ui/icons/Search';\r\n\r\nconst styles = makeStyles({\r\n    paper: {\r\n        marginTop: \"7%\",\r\n        marginLeft: \"5%\",\r\n        marginBottom: \"2%\",\r\n        display: \"flex\",\r\n        justifyContent:\"space-between\"\r\n    },\r\n    items:{\r\n     flex:\"1 1 1 1 auto\",\r\n     width:\"20em\",\r\n    },\r\n    button: {\r\n        margin: \"13px 12px 12px 10px\",\r\n        backgroundColor:\"#27E208\"\r\n    },\r\n    tables: {\r\n        height: \"380px\",\r\n      },\r\n      table: {\r\n        marginTop:\"5%\",\r\n        marginLeft: \"3%\",\r\n      },\r\n});\r\n\r\nconst AllSample = () => {\r\n    const classes = styles();\r\n    const [sampleFields,setSampleFields] = React.useState({\r\n        customerName:\"\",\r\n        date:\"\",\r\n        sampleId:\"\"\r\n    })\r\n    return (\r\n        <React.Fragment>\r\n                <div className={classes.paper}>\r\n                    <TextField\r\n                            name=\"CustomerName\"\r\n                            label=\"Customer Name\"\r\n                            // value={sampleFields.customerName}\r\n                            variant=\"filled\" \r\n                            className={classes.items}\r\n                        />\r\n                        <TextField\r\n                            // type=\"password\"\r\n                            name=\"Date\"\r\n                            // value={sampleFields.date}\r\n                            variant=\"filled\"\r\n                            type=\"date\"\r\n                            className={classes.items}\r\n                        />\r\n                           <TextField\r\n                            name=\"SampleId\"\r\n                            label=\"Sample Id\"\r\n                            // value={sampleFields.sampleId}\r\n                            variant=\"filled\" \r\n                            className={classes.items}\r\n                        />\r\n                        <Button\r\n                            variant=\"contained\"\r\n                            color=\"primary\"\r\n                            className={classes.items}\r\n                        >\r\n                            <SearchIcon/>\r\n                            Search\r\n                        </Button>\r\n                    </div>\r\n                    <div className={classes.table}>\r\n                    <TableContainer className={classes.tables}>\r\n        <Table stickyHeader aria-label=\"sticky table\">\r\n        <TableHead>\r\n          <TableRow>\r\n            <TableCell>Sample Id</TableCell>\r\n            <TableCell>Test</TableCell>\r\n            <TableCell>Customer Name</TableCell>\r\n            <TableCell>Due Date</TableCell>\r\n            <TableCell>Payment</TableCell>\r\n            <TableCell>Collected By</TableCell>\r\n            <TableCell>Status</TableCell>\r\n          </TableRow>\r\n        </TableHead>\r\n        <TableBody>\r\n            <TableRow>\r\n                <TableCell>101</TableCell>\r\n                <TableCell>Urine Test</TableCell>\r\n                <TableCell>Rajesh</TableCell>\r\n                <TableCell>2020/01/20</TableCell>\r\n                <TableCell>1500</TableCell>\r\n                <TableCell>Ravish</TableCell>\r\n                <TableCell >Pending</TableCell>\r\n                <TableCell>\r\n                <Button\r\n                          className={classes.button}\r\n                            variant=\"contained\"\r\n                            color=\"black-text\"\r\n                        >\r\n                           Generate Report\r\n                        </Button>\r\n                </TableCell>\r\n            </TableRow>\r\n            <TableRow>\r\n                <TableCell>101</TableCell>\r\n                <TableCell>Urine Test</TableCell>\r\n                <TableCell>Rajesh</TableCell>\r\n                <TableCell>2020/01/20</TableCell>\r\n                <TableCell>1500</TableCell>\r\n                <TableCell>Ravish</TableCell>\r\n                <TableCell >Done</TableCell>\r\n                <TableCell>\r\n                <Button\r\n                        className={classes.button}\r\n                            variant=\"contained\"\r\n                            color=\"black-text\"\r\n                        >\r\n                           Show Info\r\n                        </Button>\r\n                </TableCell>\r\n            </TableRow>\r\n            <TableRow>\r\n                <TableCell>101</TableCell>\r\n                <TableCell>Urine Test</TableCell>\r\n                <TableCell>Rajesh</TableCell>\r\n                <TableCell>2020/01/20</TableCell>\r\n                <TableCell>1500</TableCell>\r\n                <TableCell>Ravish</TableCell>\r\n                <TableCell >Pending</TableCell>\r\n                <TableCell>\r\n                <Button\r\n                        className={classes.button}\r\n                            variant=\"contained\"\r\n                            color=\"black-text\"\r\n                        >\r\n                           Generate Report\r\n                        </Button>\r\n                </TableCell>\r\n            </TableRow>\r\n            <TableRow>\r\n                <TableCell>101</TableCell>\r\n                <TableCell>Urine Test</TableCell>\r\n                <TableCell>Rajesh</TableCell>\r\n                <TableCell>2020/01/20</TableCell>\r\n                <TableCell>1500</TableCell>\r\n                <TableCell>Ravish</TableCell>\r\n                <TableCell >Pending</TableCell>\r\n                <TableCell>\r\n                <Button\r\n                        className={classes.button}\r\n                            variant=\"contained\"\r\n                            color=\"black-text\"\r\n                        >\r\n                           Generate Report\r\n                        </Button>\r\n                </TableCell>\r\n            </TableRow>\r\n            <TableRow>\r\n                <TableCell>101</TableCell>\r\n                <TableCell>Urine Test</TableCell>\r\n                <TableCell>Rajesh</TableCell>\r\n                <TableCell>2020/01/20</TableCell>\r\n                <TableCell>1500</TableCell>\r\n                <TableCell>Ravish</TableCell>\r\n                <TableCell >Pending</TableCell>\r\n                <TableCell>\r\n                <Button\r\n                        className={classes.button}\r\n                            variant=\"contained\"\r\n                            color=\"black-text\"\r\n                        >\r\n                           Generate Report\r\n                        </Button>\r\n                </TableCell>\r\n            </TableRow>\r\n        </TableBody>\r\n        </Table>\r\n        </TableContainer>\r\n        </div>\r\n        </React.Fragment>\r\n    )\r\n}\r\n\r\nexport default AllSample;\r\n","D:\\proj\\lims-frontend\\src\\Components\\AllReagent.js",["106"],"import React, { useState} from \"react\";\r\nimport {\r\n  TableContainer,\r\n  Table,\r\n  TableHead,\r\n  TableRow,\r\n  TableCell,\r\n  TableBody,\r\n  Paper\r\n} from \"@material-ui/core\";\r\n\r\nconst AllReagent = () => {\r\n    return (\r\n        <div>\r\n          <Paper style={Styles.Paper} elevation=\"2\">\r\n             <div style={Styles.table}>\r\n        <TableContainer style={Styles.tables}>\r\n        <Table stickyHeader aria-label=\"sticky table\">\r\n        <TableHead>\r\n          <TableRow>\r\n            <TableCell>Reagent Name</TableCell>\r\n            <TableCell>Unit</TableCell>\r\n            <TableCell>Volume</TableCell>\r\n          </TableRow>\r\n        </TableHead>\r\n        <TableBody>\r\n            <TableRow>\r\n                <TableCell>Hcl</TableCell>\r\n                <TableCell>ml</TableCell>\r\n                <TableCell>1000</TableCell>\r\n            </TableRow>\r\n            <TableRow>\r\n                <TableCell>Hcl</TableCell>\r\n                <TableCell>ml</TableCell>\r\n                <TableCell>2000</TableCell>\r\n            </TableRow>\r\n        </TableBody>\r\n        </Table>\r\n        </TableContainer>\r\n        </div>\r\n        </Paper>\r\n        </div>\r\n    )\r\n}\r\n\r\nconst Styles = {\r\n    tables: {\r\n        height: \"380px\",\r\n      },\r\n      table: {\r\n        marginTop:\"7%\",\r\n        // marginLeft: \"3%\",\r\n      },\r\n      Paper:{\r\n        marginTop:\"7%\",\r\n        marginLeft: \"3%\",\r\n        marginRight: \"3%\"\r\n      }\r\n}\r\n\r\nexport default AllReagent;","D:\\proj\\lims-frontend\\src\\Components\\appBar.js",[],"D:\\proj\\lims-frontend\\src\\action\\setUser.js",[],"D:\\proj\\lims-frontend\\src\\Components\\register.js",["107","108","109","110","111","112"],"import React, { useState } from \"react\";\r\nimport {\r\n    TextField,\r\n    Paper,\r\n    makeStyles,\r\n    Button,\r\n   Select,\r\n   MenuItem,\r\n   InputLabel,\r\n   FormControl,\r\n   TableContainer,\r\n   Table,\r\n   TableHead,\r\n   TableRow,\r\n   TableCell,\r\n   TableBody\r\n} from \"@material-ui/core\";\r\nconst styles = makeStyles({\r\n    paper: {\r\n        marginTop: \"10%\",\r\n        marginLeft: \"5%\",\r\n        marginBottom: \"2%\",\r\n        display: \"flex\",\r\n        justifyContent:\"space-between\"\r\n    },\r\n    items:{\r\n     flex:\"1 1 1 1 auto\",\r\n     width:\"20em\"\r\n    },\r\n    button: {\r\n        margin: \"13px 12px 12px 10px\",\r\n    },\r\n    tables: {\r\n        height: \"380px\",\r\n      },\r\n      table: {\r\n        marginTop:\"7%\",\r\n        marginLeft: \"3%\",\r\n      },\r\n});\r\n\r\n\r\nconst Register = () => {\r\n    const classes = styles();\r\n    const [username, setUsername] = useState(\"\");\r\n    const [password , setPassword] = useState(\"\");\r\n    const [role , setRole] = useState(\"\");\r\n    const [open, setOpen] = React.useState(false);\r\n\r\n  const handleChange = (event) => {\r\n    setRole(event.target.value);\r\n  };\r\n\r\n  const handleClose = () => {\r\n    setOpen(false);\r\n  };\r\n\r\n  const handleOpen = () => {\r\n    setOpen(true);\r\n  };\r\n    return (\r\n        <React.Fragment>\r\n                <div className={classes.paper}>\r\n                    <TextField\r\n                            name=\"Username\"\r\n                            label=\"Username\"\r\n                            // value={username}\r\n                            variant=\"filled\" \r\n                            className={classes.items}\r\n                        />\r\n                        <TextField\r\n                            // type=\"password\"\r\n                            name=\"password\"\r\n                            label=\"Password\"\r\n                            // value={password}\r\n                            variant=\"filled\"\r\n                            className={classes.items}\r\n                        />\r\n                         <FormControl className={classes.formControl}>\r\n                        <InputLabel id=\"demo-controlled-open-select-label\">Roles</InputLabel>\r\n                        <Select\r\n                        labelId=\"demo-controlled-open-select-label\"\r\n                        id=\"demo-controlled-open-select\"\r\n                        open={open}\r\n                        onClose={handleClose}\r\n                        onOpen={handleOpen}\r\n                        value={role}\r\n                        onChange={handleChange}\r\n                        className={classes.items}\r\n                        >\r\n                        <MenuItem value=\"staff\">Staff</MenuItem>\r\n                        <MenuItem value=\"inventory_manager\">Inventory Manager</MenuItem>\r\n                        <MenuItem value=\"accountant\">Accountant</MenuItem>\r\n                        </Select>\r\n                    </FormControl>\r\n\r\n                        <Button\r\n                            className={classes.button}\r\n                            variant=\"contained\"\r\n                            color=\"primary\"\r\n                            className={classes.items}\r\n                        >\r\n                            Register\r\n                        </Button>\r\n                    </div>\r\n                    <div className={classes.table}>\r\n        <TableContainer className={classes.tables}>\r\n        <Table stickyHeader aria-label=\"sticky table\">\r\n        <TableHead>\r\n          <TableRow>\r\n            <TableCell>UserName</TableCell>\r\n            <TableCell>Password</TableCell>\r\n            <TableCell>Roles</TableCell>\r\n          </TableRow>\r\n        </TableHead>\r\n        <TableBody>\r\n            <TableRow>\r\n                <TableCell>Ramesh</TableCell>\r\n                <TableCell>1234</TableCell>\r\n                <TableCell>Inventory Manager</TableCell>\r\n                <Button\r\n                            className={classes.button}\r\n                            variant=\"contained\"\r\n                            color=\"primary\"\r\n                        >\r\n                            Edit\r\n                        </Button>\r\n                        <Button\r\n                            className={classes.button}\r\n                            variant=\"contained\"\r\n                            color=\"secondary\"\r\n                        >\r\n                            Delete\r\n                        </Button>\r\n            </TableRow>\r\n            <TableRow>\r\n                <TableCell>Ramesh</TableCell>\r\n                <TableCell>1234</TableCell>\r\n                <TableCell>Inventory Manager</TableCell>\r\n                <Button\r\n                            className={classes.button}\r\n                            variant=\"contained\"\r\n                            color=\"primary\"\r\n                        >\r\n                            Edit\r\n                        </Button>\r\n                        <Button\r\n                            className={classes.button}\r\n                            variant=\"contained\"\r\n                            color=\"secondary\"\r\n                        >\r\n                            Delete\r\n                        </Button>\r\n            </TableRow>\r\n            <TableRow>\r\n                <TableCell>Ramesh</TableCell>\r\n                <TableCell>1234</TableCell>\r\n                <TableCell>Inventory Manager</TableCell>\r\n                <Button\r\n                            className={classes.button}\r\n                            variant=\"contained\"\r\n                            color=\"primary\"\r\n                        >\r\n                            Edit\r\n                        </Button>\r\n                        <Button\r\n                            className={classes.button}\r\n                            variant=\"contained\"\r\n                            color=\"secondary\"\r\n                        >\r\n                            Delete\r\n                        </Button>\r\n            </TableRow>\r\n        </TableBody>\r\n        </Table>\r\n        </TableContainer>\r\n        </div>\r\n        </React.Fragment>\r\n    )\r\n}\r\n\r\nexport default Register;","D:\\proj\\lims-frontend\\src\\Components\\ImportReagent.js",["113","114","115"],"import React, { useState } from \"react\";\r\nimport \"./myStyle.css\";\r\nimport {\r\n    TextField,\r\n    Paper,\r\n    makeStyles,\r\n    Button,\r\n   Select,\r\n   MenuItem,\r\n   InputLabel,\r\n   FormControl\r\n} from \"@material-ui/core\";\r\nconst styles = makeStyles({\r\n    paper: {\r\n        display: \"flex\",\r\n        justifyContent: \"center\",\r\n        alignItems: \"center\",\r\n        flexDirection: \"column\",\r\n        height: \"100%\",\r\n        width: \"100%\",\r\n        margin: \"30\",\r\n        padding: \"5\",\r\n        backgroundColor: \"#f7f7f7\",\r\n\r\n    },\r\n    input: {\r\n        display: \"flex\",\r\n        flexDirection: \"column\",\r\n        justifyContent:\"space-around\"\r\n    },\r\n    items:{\r\n     height:\"80%\"\r\n    },\r\n    button: {\r\n        marginTop: \"2rem\",\r\n    }\r\n});\r\n\r\n\r\nconst ImportReagent = () => {\r\n    const classes = styles();\r\n    const [importReagent,setImportReagent] = React.useState({\r\n        reagent:\"\",\r\n        unit:\"\",\r\n        vloume:\"\"\r\n    })\r\n\r\n    // const handleChange = (event) => {\r\n    //     setRole(event.target.value);\r\n    //   };\r\n    return (\r\n        <div>\r\n                   <React.Fragment>\r\n        <Paper style={{ height: \"100vh\" }}>\r\n                <div className={classes.paper}>\r\n                    <div className={classes.input}>\r\n                        <FormControl className={classes.formControl}>\r\n                         <InputLabel id=\"demo-customized-select-label\">Name Of Reagent</InputLabel>\r\n                         <Select\r\n                        labelId=\"demo-customized-select-label\"\r\n                        id=\"demo-customized-select\"\r\n                        // value={reagent}\r\n                        // onChange={handleChange}\r\n                        >\r\n                        <MenuItem value=\"hcl\">Hcl</MenuItem>\r\n                        <MenuItem value=\"H2so4\">H2SO4</MenuItem>\r\n                        </Select>\r\n                    </FormControl>\r\n                    <FormControl className={classes.formControl}>\r\n                         <InputLabel id=\"demo-customized-select-label\">Unit Of Reagent</InputLabel>\r\n                         <Select\r\n                        labelId=\"demo-customized-select-label\"\r\n                        id=\"demo-customized-select\"\r\n                        // value={unit}\r\n                        // onChange={handleChange}\r\n                        >\r\n                        <MenuItem value=\"ml\">ml</MenuItem>\r\n                        <MenuItem value=\"l\">l</MenuItem>\r\n                        </Select>\r\n                    </FormControl>\r\n                    <TextField\r\n                            name=\"voume\"\r\n                            label=\"Volume\"\r\n                            // value={voulme}\r\n                            variant=\"filled\"     \r\n                        />\r\n\r\n                        <Button\r\n                            className={classes.button}\r\n                            variant=\"contained\"\r\n                            color=\"primary\"\r\n                        >\r\n                            Add \r\n                        </Button>\r\n                    </div>\r\n                </div>\r\n            </Paper>\r\n        </React.Fragment>\r\n        </div>\r\n    )\r\n}\r\nexport default ImportReagent;","D:\\proj\\lims-frontend\\src\\reducers\\authReducer.js",[],"D:\\proj\\lims-frontend\\src\\Components\\AddTest.js",["116","117","118","119","120","121","122","123","124","125"],"import React from 'react';\r\nimport \"./myStyle.css\";\r\nimport {\r\n    makeStyles,\r\n    Select,\r\n    InputLabel,\r\n    Button,\r\n    FormControl,\r\n    TextField,\r\n    MenuItem,\r\n    theme,\r\n    CircularProgress,\r\n} from \"@material-ui/core\";\r\n\r\nconst useStyles = makeStyles(theme => ({\r\n    body:{\r\n        padding: \"1em 2em 2em 2em\",\r\n        margin: \"4em 2em 2em 2em\"\r\n    },\r\n    root: {\r\n        display: \"flex\",\r\n    },\r\n    position: {\r\n        marginLeft: theme.spacing(8),\r\n        flex : \"1 auto\",\r\n    },\r\n    buttons: {\r\n        marginTop: theme.spacing(6),\r\n        marginLeft: theme.spacing(120)\r\n    },\r\n    button:{\r\n        marginLeft: theme.spacing(6),\r\n        width: \"200px\",\r\n        paddingLeft:\"20px\",\r\n        height: \"3.3em\"\r\n    }\r\n}));\r\n\r\nconst AddTest = () => {\r\n    const classes = useStyles();\r\n    const [addTest,setAddTest]=React.useState({\r\n        testName:\"\",\r\n        testAmount:\"\",\r\n    });\r\n    const [parameters,setParameters] =React.useState({\r\n        parameter:[],\r\n        unit:[],\r\n        refrenceRange:[]\r\n    })\r\n    return (\r\n        <div className={classes.body}>\r\n            <React.Fragment> \r\n                <h4>Test Details</h4>\r\n            <div className={classes.root}>\r\n                <TextField\r\n                    label=\"Test Name\"\r\n                    variant=\"outlined\"\r\n                    // value={addTest.testName}\r\n                    style={{ width: 80 }}\r\n                    className={classes.position}\r\n                    type = \"string\"\r\n                />\r\n                  <TextField\r\n                    label=\"Test Amount\"\r\n                    variant=\"outlined\"\r\n                    // value={addTest.testAmount}\r\n                    style={{ width: 80 }}\r\n                    className={classes.position}\r\n                    type=\"number\"\r\n                /> \r\n                </div>\r\n                <h4>Bio-Chemical Parameters</h4>\r\n            <div className={classes.root}>\r\n                <TextField\r\n                    label=\"Parameter\"\r\n                    variant=\"outlined\"\r\n                    // value={parameters.parameter}\r\n                    style={{ width: 80 }}\r\n                    className={classes.position}\r\n                    type = \"string\"\r\n                />\r\n                  <TextField\r\n                    label=\"unit\"\r\n                    variant=\"outlined\"\r\n                    // value={parameters.unit}\r\n                    style={{ width: 80 }}\r\n                    className={classes.position}\r\n                    type=\"string\"\r\n                /> \r\n                  <TextField\r\n                    label=\"Refrence Range\"\r\n                    variant=\"outlined\"\r\n                    // value={parameters.refrenceRange}\r\n                    style={{ width: 80 }}\r\n                    className={classes.position}\r\n                    type=\"string\"\r\n                />\r\n                <Button\r\n                    variant=\"contained\"\r\n                    color=\"primary\"\r\n                    className={classes.button}\r\n                >\r\n                  Add\r\n                </Button>\r\n                </div>\r\n            </React.Fragment>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default AddTest;","D:\\proj\\lims-frontend\\src\\Components\\login.js",["126"],"import React, { useState } from \"react\";\r\nimport {\r\n  TextField,\r\n  Paper,\r\n  makeStyles,\r\n  Typography,\r\n  Button,\r\n  FormControl,\r\n} from \"@material-ui/core\";\r\nimport Snackbar from \"@material-ui/core/Snackbar\";\r\nimport MuiAlert from \"@material-ui/lab/Alert\";\r\n\r\nimport axios from \"../api\";\r\nimport jwt_decode from \"jwt-decode\";\r\n\r\nimport { useDispatch } from \"react-redux\";\r\nimport { setUser } from \"../action/setUser\";\r\nimport { Redirect } from \"react-router\";\r\nconst styles = makeStyles({\r\n  paper: {\r\n    display: \"flex\",\r\n    justifyContent: \"center\",\r\n    alignItems: \"center\",\r\n    flexDirection: \"column\",\r\n    height: \"100%\",\r\n    width: \"100%\",\r\n    margin: \"0\",\r\n    padding: \"0\",\r\n    backgroundColor: \"#f7f7f7\",\r\n  },\r\n  input: {\r\n    display: \"flex\",\r\n    flexDirection: \"column\",\r\n  },\r\n  button: {\r\n    marginTop: \"2rem\",\r\n  },\r\n});\r\nfunction Alert(props) {\r\n  return <MuiAlert elevation={6} variant=\"filled\" {...props} />;\r\n}\r\n\r\nconst Login = ({ isLogin, setLogin }) => {\r\n  const dispatch = useDispatch();\r\n  const classes = styles();\r\n  const [username, setUsername] = useState(\"\");\r\n  const [password, setPassword] = useState(\"\");\r\n\r\n  // //SnackBar operations\r\n  const [messege, setMessege] = useState(\"\");\r\n  const [open, setOpen] = useState(false);\r\n  const handleOpen = () => {\r\n    setOpen(true);\r\n  };\r\n\r\n  const handleClose = (reason) => {\r\n    if (reason === \"clickaway\") {\r\n      return;\r\n    }\r\n    setOpen(false);\r\n  };\r\n\r\n  const handleSubmit = async () => {\r\n    try {\r\n      const { data } = await axios.post(\"/login\", {\r\n        userName: username,\r\n        password,\r\n      });\r\n      const { id, role } = jwt_decode(data.token);\r\n      localStorage.setItem(\"token\", data.token);\r\n      window.axios.defaults.headers.common[\"Authorization\"] =\r\n        \"Bearer \" + localStorage.getItem(\"token\");\r\n      dispatch(setUser(id, role));\r\n      setLogin(true);\r\n    } catch (e) {\r\n      console.log(e);\r\n      setMessege(e.response.data);\r\n      handleOpen();\r\n      setUsername(\"\");\r\n      setPassword(\"\");\r\n    }\r\n  };\r\n\r\n  return (\r\n    <React.Fragment>\r\n      <Paper style={{ height: \"100vh\" }}>\r\n        <div className={classes.paper}>\r\n          <Typography\r\n            variant=\"h4\"\r\n            style={{ fontWeight: \"bold\", marginBottom: \"20px\" }}\r\n          >\r\n            Laboratory Management System\r\n          </Typography>\r\n          <FormControl>\r\n            <div className={classes.input}>\r\n              <TextField\r\n                name=\"Username\"\r\n                required\r\n                label=\"Username\"\r\n                value={username}\r\n                variant=\"filled\"\r\n                onChange={(e) => setUsername(e.target.value)}\r\n              />\r\n              <TextField\r\n                required\r\n                type=\"password\"\r\n                name=\"password\"\r\n                label=\"Password\"\r\n                value={password}\r\n                variant=\"filled\"\r\n                onChange={(e) => setPassword(e.target.value)}\r\n              />\r\n              <Button\r\n                className={classes.button}\r\n                variant=\"contained\"\r\n                color=\"primary\"\r\n                onClick={handleSubmit}\r\n              >\r\n                LOGIN\r\n              </Button>\r\n            </div>\r\n          </FormControl>\r\n        </div>\r\n      </Paper>\r\n      <Snackbar open={open} autoHideDuration={6000} onClose={handleClose}>\r\n        <Alert onClose={handleClose} severity=\"error\">\r\n          {messege}\r\n        </Alert>\r\n      </Snackbar>\r\n    </React.Fragment>\r\n  );\r\n};\r\n\r\nexport default Login;\r\n","D:\\proj\\lims-frontend\\src\\Components\\AddSample.js",["127","128","129","130","131"],"D:\\proj\\lims-frontend\\src\\Components\\AddCutomer.js",["132","133","134","135"],"import React from \"react\";\r\nimport \"./myStyle.css\";\r\nimport {\r\n    makeStyles,\r\n    Select,\r\n    InputLabel,\r\n    Button,\r\n    FormControl,\r\n    TextField,\r\n    MenuItem,\r\n    theme,\r\n    CircularProgress,\r\n    Paper,\r\n    Input,\r\n} from \"@material-ui/core\";\r\nimport  addCustomerValidation  from \"../validation/validator\";\r\nimport axios from \"../api\";\r\nimport SnackBar from \"./SnackBar\";\r\n\r\nconst useStyles = makeStyles(theme => ({\r\n    root: {\r\n        display: \"flex\",\r\n        marginBottom: theme.spacing(7)\r\n        \r\n    },\r\n    position: {\r\n        marginLeft: theme.spacing(8),\r\n        flex : \"1 auto\",\r\n    },\r\n    buttons: {\r\n        marginTop: theme.spacing(6),\r\n        marginLeft: theme.spacing(120)\r\n    },\r\n    button:{\r\n        margin:\"5px 10px 5px 5px\"\r\n    },\r\n    label:{\r\n         marginLeft: theme.spacing(9)\r\n    }\r\n}));\r\n  \r\n\r\nconst AddCutomer = () => {\r\n    const classes = useStyles();\r\n    const [addCustomer,setAddCustomer]=React.useState({\r\n        firstName:\"\",\r\n        lastName:\"\",\r\n        age:0,\r\n        address:\"\",\r\n        gender:\"\",\r\n        contactNumber:0,\r\n    });\r\n    const [reset , setReset]= React.useState(Object.assign({},addCustomer));\r\n    const [open, setOpen] = React.useState(false);\r\n    const [message,setMessage]= React.useState(\"\");\r\n    const [status,setStatus]= React.useState(\"\");\r\n\r\n  const handleClick = () => {\r\n    setOpen(true);\r\n  };\r\n\r\n  const handleChange = input => event =>{\r\n      setAddCustomer({...addCustomer,[input]:event.target.value});\r\n  }\r\n\r\n  const handleClose = (event, reason) => {\r\n    if (reason === \"clickaway\") {\r\n      return;\r\n    }\r\n\r\n    setOpen(false);\r\n  };\r\n    const handleReset =()=>{\r\n        setAddCustomer({...reset});\r\n    }\r\n\r\n    const handleSubmit = async() =>{\r\n        const {error} = addCustomerValidation(addCustomer);\r\n        if(error){\r\n        setMessage(error.details[0].message);\r\n        setStatus(\"error\");\r\n        handleClick();\r\n    }\r\n        if (error){\r\n            console.log(error.details[0].message);\r\n        }\r\n        if(!error){\r\n            try{\r\n            const res = await axios.post(\"/customer/add\",addCustomer);\r\n            setMessage(res.data);\r\n            setStatus(\"success\");\r\n            handleClick();\r\n            console.log(res.data);\r\n            console.log(reset);\r\n            setAddCustomer({...reset});\r\n            }\r\n            catch(e){\r\n                setMessage(e);\r\n                setStatus(\"error\");\r\n                handleClick();\r\n                console.log(e);\r\n            }\r\n        }\r\n    };\r\n\r\n  return (\r\n    <div>\r\n      <React.Fragment>\r\n        <Paper\r\n          style={{\r\n            padding: \"1em 2em 2em 2em\",\r\n            margin: \"8em 2em 2em 2em\",\r\n          }}\r\n          elevation={3}\r\n        >\r\n          <h1 align=\"center\">Customer Registration Page</h1>\r\n          <h4>Customer Details</h4>\r\n          <div className={classes.root}>\r\n            <TextField\r\n              name=\"First Name\"\r\n              label=\"First Name\"\r\n              variant=\"outlined\"\r\n              value={addCustomer.firstName}\r\n              style={{ width: 80 }}\r\n              className={classes.position}\r\n              type=\"string\"\r\n              onChange={handleChange(\"firstName\")}\r\n            />\r\n            <TextField\r\n              label=\"Last Name\"\r\n              variant=\"outlined\"\r\n              value={addCustomer.lastName}\r\n              style={{ width: 80 }}\r\n              className={classes.position}\r\n              type=\"string\"\r\n              onChange={handleChange(\"lastName\")}\r\n            />\r\n            <TextField\r\n              label=\"Age\"\r\n              variant=\"outlined\"\r\n              value={addCustomer.age}\r\n              style={{ width: 80 }}\r\n              className={classes.position}\r\n              type=\"number\"\r\n              onChange={handleChange(\"age\")}\r\n            />\r\n          </div>\r\n          <div className={classes.root}>\r\n            <FormControl className={classes.formControl}>\r\n              <InputLabel className={classes.label}>Gender</InputLabel>\r\n              <Select\r\n                labelId=\"demo-controlled-open-select-label\"\r\n                id=\"demo-controlled-open-select\"\r\n                value={addCustomer.gender}\r\n                label=\"Gender\"\r\n                className={classes.position}\r\n                style={{ width: 120 }}\r\n                onChange={handleChange(\"gender\")}\r\n              >\r\n                <MenuItem value=\"male\">Male</MenuItem>\r\n                <MenuItem value=\"female\">Female</MenuItem>\r\n                <MenuItem value=\"others\">Others</MenuItem>\r\n              </Select>\r\n            </FormControl>\r\n            <TextField\r\n              label=\"Location\"\r\n              variant=\"outlined\"\r\n              value={addCustomer.address}\r\n              style={{ width: 80 }}\r\n              className={classes.position}\r\n              type=\"string\"\r\n              onChange={handleChange(\"address\")}\r\n            />\r\n            <TextField\r\n              label=\"Contact Number\"\r\n              variant=\"outlined\"\r\n              value={addCustomer.contactNumber}\r\n              style={{ width: 80 }}\r\n              className={classes.position}\r\n              type=\"number\"\r\n              onChange={handleChange(\"contactNumber\")}\r\n            />\r\n          </div>\r\n          <div>\r\n            <div className={classes.buttons}>\r\n                <Button\r\n                    variant=\"contained\"\r\n                    style={{ width: \"200px\",paddingLeft:\"20px\" }}\r\n                    color=\"primary\"\r\n                    className={classes.button}\r\n                    onClick={handleSubmit}\r\n                >\r\n                  Add\r\n                </Button>\r\n                <Button\r\n                    variant=\"contained\"\r\n                    style={{ width: \"200px\" ,paddingRight:\"20px\"}}\r\n                    color=\"secondary\"\r\n                    className={classes.button}\r\n                    onClick={handleReset}\r\n                >\r\n                    Reset\r\n                </Button>\r\n            </div>\r\n            </div>\r\n            </Paper>\r\n            </React.Fragment>\r\n            <SnackBar\r\n            messege={message}\r\n            open = {open}\r\n            handleClose={handleClose}\r\n            status={status}\r\n            />\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default AddCutomer;\r\n","D:\\proj\\lims-frontend\\src\\Components\\SnackBar.js",[],"D:\\proj\\lims-frontend\\src\\validation\\validator.js",["136"],"import React from \"react\";\r\nimport joi from \"@hapi/joi\";\r\n\r\nconst addCustomerValidaiton = (data) => {\r\n  const schema = joi.object({\r\n    firstName: joi.string().min(4).required(),\r\n    lastName: joi.string().min(4).required(),\r\n    age: joi.number().integer().min(1).max(110).required(),\r\n    address: joi.string().min(3).required(),\r\n    gender: joi.string().required(),\r\n    contactNumber: joi.number().integer().required(),\r\n  });\r\n  return schema.validate(data);\r\n};\r\n\r\nexport const addSampleValidaiton = (data) => {\r\n  const schema = joi.object({\r\n    sampleNo: joi.string().required(),\r\n    dueDate: joi.date().required(),\r\n    collectedBy: joi.string().min(3).required(),\r\n    paymentStatus: joi.number().integer().required(),\r\n    testName: joi.string().min(3).required(),\r\n  });\r\n  return schema.validate(data);\r\n};\r\n\r\n// export default {\r\n//   addCustomerValidaiton,\r\n//   addSampleValidaiton\r\n// };\r\n\r\nexport default addCustomerValidaiton;\r\n","D:\\proj\\lims-frontend\\src\\api\\index.js",[],{"ruleId":"137","replacedBy":"138"},{"ruleId":"139","replacedBy":"140"},{"ruleId":"141","severity":1,"message":"142","line":12,"column":3,"nodeType":"143","messageId":"144","endLine":12,"endColumn":11},{"ruleId":"141","severity":1,"message":"145","line":1,"column":17,"nodeType":"143","messageId":"144","endLine":1,"endColumn":25},{"ruleId":"141","severity":1,"message":"146","line":15,"column":12,"nodeType":"143","messageId":"144","endLine":15,"endColumn":19},{"ruleId":"141","severity":1,"message":"147","line":15,"column":22,"nodeType":"143","messageId":"144","endLine":15,"endColumn":32},{"ruleId":"148","severity":1,"message":"149","line":29,"column":11,"nodeType":"150","endLine":29,"endColumn":37},{"ruleId":"141","severity":1,"message":"145","line":1,"column":17,"nodeType":"143","messageId":"144","endLine":1,"endColumn":25},{"ruleId":"148","severity":1,"message":"149","line":46,"column":29,"nodeType":"150","endLine":46,"endColumn":47},{"ruleId":"148","severity":1,"message":"149","line":65,"column":29,"nodeType":"150","endLine":65,"endColumn":47},{"ruleId":"148","severity":1,"message":"149","line":84,"column":29,"nodeType":"150","endLine":84,"endColumn":47},{"ruleId":"148","severity":1,"message":"149","line":103,"column":29,"nodeType":"150","endLine":103,"endColumn":47},{"ruleId":"148","severity":1,"message":"149","line":122,"column":29,"nodeType":"150","endLine":122,"endColumn":47},{"ruleId":"141","severity":1,"message":"145","line":1,"column":17,"nodeType":"143","messageId":"144","endLine":1,"endColumn":25},{"ruleId":"141","severity":1,"message":"151","line":42,"column":12,"nodeType":"143","messageId":"144","endLine":42,"endColumn":24},{"ruleId":"141","severity":1,"message":"152","line":42,"column":25,"nodeType":"143","messageId":"144","endLine":42,"endColumn":40},{"ruleId":"141","severity":1,"message":"145","line":1,"column":17,"nodeType":"143","messageId":"144","endLine":1,"endColumn":25},{"ruleId":"141","severity":1,"message":"153","line":4,"column":5,"nodeType":"143","messageId":"144","endLine":4,"endColumn":10},{"ruleId":"141","severity":1,"message":"154","line":45,"column":12,"nodeType":"143","messageId":"144","endLine":45,"endColumn":20},{"ruleId":"141","severity":1,"message":"155","line":45,"column":22,"nodeType":"143","messageId":"144","endLine":45,"endColumn":33},{"ruleId":"141","severity":1,"message":"156","line":46,"column":12,"nodeType":"143","messageId":"144","endLine":46,"endColumn":20},{"ruleId":"141","severity":1,"message":"157","line":46,"column":23,"nodeType":"143","messageId":"144","endLine":46,"endColumn":34},{"ruleId":"148","severity":1,"message":"149","line":101,"column":29,"nodeType":"150","endLine":101,"endColumn":54},{"ruleId":"141","severity":1,"message":"145","line":1,"column":17,"nodeType":"143","messageId":"144","endLine":1,"endColumn":25},{"ruleId":"141","severity":1,"message":"158","line":42,"column":12,"nodeType":"143","messageId":"144","endLine":42,"endColumn":25},{"ruleId":"141","severity":1,"message":"159","line":42,"column":26,"nodeType":"143","messageId":"144","endLine":42,"endColumn":42},{"ruleId":"141","severity":1,"message":"160","line":5,"column":5,"nodeType":"143","messageId":"144","endLine":5,"endColumn":11},{"ruleId":"141","severity":1,"message":"161","line":6,"column":5,"nodeType":"143","messageId":"144","endLine":6,"endColumn":15},{"ruleId":"141","severity":1,"message":"162","line":8,"column":5,"nodeType":"143","messageId":"144","endLine":8,"endColumn":16},{"ruleId":"141","severity":1,"message":"163","line":10,"column":5,"nodeType":"143","messageId":"144","endLine":10,"endColumn":13},{"ruleId":"141","severity":1,"message":"164","line":11,"column":5,"nodeType":"143","messageId":"144","endLine":11,"endColumn":10},{"ruleId":"141","severity":1,"message":"165","line":12,"column":5,"nodeType":"143","messageId":"144","endLine":12,"endColumn":21},{"ruleId":"141","severity":1,"message":"166","line":41,"column":12,"nodeType":"143","messageId":"144","endLine":41,"endColumn":19},{"ruleId":"141","severity":1,"message":"167","line":41,"column":20,"nodeType":"143","messageId":"144","endLine":41,"endColumn":30},{"ruleId":"141","severity":1,"message":"168","line":45,"column":12,"nodeType":"143","messageId":"144","endLine":45,"endColumn":22},{"ruleId":"141","severity":1,"message":"169","line":45,"column":23,"nodeType":"143","messageId":"144","endLine":45,"endColumn":36},{"ruleId":"141","severity":1,"message":"142","line":18,"column":10,"nodeType":"143","messageId":"144","endLine":18,"endColumn":18},{"ruleId":"141","severity":1,"message":"170","line":92,"column":19,"nodeType":"143","messageId":"144","endLine":92,"endColumn":29},{"ruleId":"141","severity":1,"message":"171","line":111,"column":17,"nodeType":"143","messageId":"144","endLine":111,"endColumn":25},{"ruleId":"172","severity":1,"message":"173","line":122,"column":6,"nodeType":"174","endLine":122,"endColumn":18,"suggestions":"175"},{"ruleId":"148","severity":1,"message":"149","line":265,"column":13,"nodeType":"150","endLine":265,"endColumn":38},{"ruleId":"141","severity":1,"message":"176","line":304,"column":29,"nodeType":"143","messageId":"144","endLine":304,"endColumn":32},{"ruleId":"141","severity":1,"message":"164","line":11,"column":5,"nodeType":"143","messageId":"144","endLine":11,"endColumn":10},{"ruleId":"141","severity":1,"message":"165","line":12,"column":5,"nodeType":"143","messageId":"144","endLine":12,"endColumn":21},{"ruleId":"141","severity":1,"message":"177","line":14,"column":5,"nodeType":"143","messageId":"144","endLine":14,"endColumn":10},{"ruleId":"141","severity":1,"message":"171","line":53,"column":20,"nodeType":"143","messageId":"144","endLine":53,"endColumn":28},{"ruleId":"141","severity":1,"message":"178","line":1,"column":8,"nodeType":"143","messageId":"144","endLine":1,"endColumn":13},"no-native-reassign",["179"],"no-negated-in-lhs",["180"],"no-unused-vars","'Redirect' is defined but never used.","Identifier","unusedVar","'useState' is defined but never used.","'reagent' is assigned a value but never used.","'setReagent' is assigned a value but never used.","react/jsx-no-duplicate-props","No duplicate props allowed","JSXAttribute","'sampleFields' is assigned a value but never used.","'setSampleFields' is assigned a value but never used.","'Paper' is defined but never used.","'username' is assigned a value but never used.","'setUsername' is assigned a value but never used.","'password' is assigned a value but never used.","'setPassword' is assigned a value but never used.","'importReagent' is assigned a value but never used.","'setImportReagent' is assigned a value but never used.","'Select' is defined but never used.","'InputLabel' is defined but never used.","'FormControl' is defined but never used.","'MenuItem' is defined but never used.","'theme' is defined but never used.","'CircularProgress' is defined but never used.","'addTest' is assigned a value but never used.","'setAddTest' is assigned a value but never used.","'parameters' is assigned a value but never used.","'setParameters' is assigned a value but never used.","'setColumns' is assigned a value but never used.","'setReset' is assigned a value but never used.","react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'fetchSearchResult'. Either include it or remove the dependency array.","ArrayExpression",["181"],"'res' is assigned a value but never used.","'Input' is defined but never used.","'React' is defined but never used.","no-global-assign","no-unsafe-negation",{"desc":"182","fix":"183"},"Update the dependencies array to be: [fetchSearchResult, inputValue]",{"range":"184","text":"185"},[4433,4445],"[fetchSearchResult, inputValue]"]